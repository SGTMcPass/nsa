{"chunk_id": "index_00", "type": "unknown", "path": "index.md", "heading": "Root", "preview": "### Root  <p align=justify> The Trick Simulation Environment, developed at the N"}
{"chunk_id": "How-To-Guides_00", "type": "howto", "path": "howto_guides/How-To-Guides.md", "heading": "Appendix", "preview": "### Appendix  | [Home](/trick) → How-To Guides | |------------------------------"}
{"chunk_id": "Realtime-Best-Practices_00", "type": "howto", "path": "howto_guides/Realtime-Best-Practices.md", "heading": "Trick Realtime Best Practices > Do's, Don'ts, and Wisdom > 5. Miscellaneous", "preview": "### Trick Realtime Best Practices > Do's, Don'ts, and Wisdom > 5. Miscellaneous "}
{"chunk_id": "Realtime-Best-Practices_01", "type": "howto", "path": "howto_guides/Realtime-Best-Practices.md", "heading": "Trick Realtime Best Practices > Do's, Don'ts, and Wisdom > 5. Miscellaneous", "preview": "### Trick Realtime Best Practices > Do's, Don'ts, and Wisdom > 5. Miscellaneous "}
{"chunk_id": "Realtime-Best-Practices_02", "type": "howto", "path": "howto_guides/Realtime-Best-Practices.md", "heading": "Trick Realtime Best Practices > Do's, Don'ts, and Wisdom > 5. Miscellaneous", "preview": "### Trick Realtime Best Practices > Do's, Don'ts, and Wisdom > 5. Miscellaneous "}
{"chunk_id": "Realtime-Best-Practices_03", "type": "howto", "path": "howto_guides/Realtime-Best-Practices.md", "heading": "Trick Realtime Best Practices > Do's, Don'ts, and Wisdom > 5. Miscellaneous", "preview": "### Trick Realtime Best Practices > Do's, Don'ts, and Wisdom > 5. Miscellaneous "}
{"chunk_id": "Realtime-Best-Practices_04", "type": "howto", "path": "howto_guides/Realtime-Best-Practices.md", "heading": "Trick Realtime Best Practices > Do's, Don'ts, and Wisdom > 5. Miscellaneous", "preview": "### Trick Realtime Best Practices > Do's, Don'ts, and Wisdom > 5. Miscellaneous "}
{"chunk_id": "Realtime-Best-Practices_05", "type": "howto", "path": "howto_guides/Realtime-Best-Practices.md", "heading": "Trick Realtime Best Practices > Do's, Don'ts, and Wisdom > 5. Miscellaneous", "preview": "### Trick Realtime Best Practices > Do's, Don'ts, and Wisdom > 5. Miscellaneous "}
{"chunk_id": "Realtime-Best-Practices_06", "type": "howto", "path": "howto_guides/Realtime-Best-Practices.md", "heading": "Trick Realtime Best Practices > Do's, Don'ts, and Wisdom > 5. Miscellaneous", "preview": "### Trick Realtime Best Practices > Do's, Don'ts, and Wisdom > 5. Miscellaneous "}
{"chunk_id": "Realtime-Best-Practices_07", "type": "howto", "path": "howto_guides/Realtime-Best-Practices.md", "heading": "Trick Realtime Best Practices > Do's, Don'ts, and Wisdom > 5. Miscellaneous", "preview": "### Trick Realtime Best Practices > Do's, Don'ts, and Wisdom > 5. Miscellaneous "}
{"chunk_id": "Realtime-Best-Practices_08", "type": "howto", "path": "howto_guides/Realtime-Best-Practices.md", "heading": "Trick Realtime Best Practices > Do's, Don'ts, and Wisdom > 5. Miscellaneous", "preview": "### Trick Realtime Best Practices > Do's, Don'ts, and Wisdom > 5. Miscellaneous "}
{"chunk_id": "Realtime-Best-Practices_09", "type": "howto", "path": "howto_guides/Realtime-Best-Practices.md", "heading": "Trick Realtime Best Practices > Do's, Don'ts, and Wisdom > 5. Miscellaneous", "preview": "### Trick Realtime Best Practices > Do's, Don'ts, and Wisdom > 5. Miscellaneous "}
{"chunk_id": "Realtime-Best-Practices_10", "type": "howto", "path": "howto_guides/Realtime-Best-Practices.md", "heading": "Trick Realtime Best Practices > Do's, Don'ts, and Wisdom > 5. Miscellaneous", "preview": "### Trick Realtime Best Practices > Do's, Don'ts, and Wisdom > 5. Miscellaneous "}
{"chunk_id": "Realtime-Best-Practices_11", "type": "howto", "path": "howto_guides/Realtime-Best-Practices.md", "heading": "Trick Realtime Best Practices > Do's, Don'ts, and Wisdom > 5. Miscellaneous", "preview": "### Trick Realtime Best Practices > Do's, Don'ts, and Wisdom > 5. Miscellaneous "}
{"chunk_id": "Checkpointing-Best-Practices_00", "type": "howto", "path": "howto_guides/Checkpointing-Best-Practices.md", "heading": "Trick CheckPointing Best Practices > Other Resources You Might Find Useful", "preview": "### Trick CheckPointing Best Practices > Other Resources You Might Find Useful  "}
{"chunk_id": "Checkpointing-Best-Practices_01", "type": "howto", "path": "howto_guides/Checkpointing-Best-Practices.md", "heading": "Trick CheckPointing Best Practices > Other Resources You Might Find Useful", "preview": "### Trick CheckPointing Best Practices > Other Resources You Might Find Useful  "}
{"chunk_id": "Checkpointing-Best-Practices_02", "type": "howto", "path": "howto_guides/Checkpointing-Best-Practices.md", "heading": "Trick CheckPointing Best Practices > Other Resources You Might Find Useful", "preview": "### Trick CheckPointing Best Practices > Other Resources You Might Find Useful  "}
{"chunk_id": "Checkpointing-Best-Practices_03", "type": "howto", "path": "howto_guides/Checkpointing-Best-Practices.md", "heading": "Trick CheckPointing Best Practices > Other Resources You Might Find Useful", "preview": "### Trick CheckPointing Best Practices > Other Resources You Might Find Useful  "}
{"chunk_id": "Checkpointing-Best-Practices_04", "type": "howto", "path": "howto_guides/Checkpointing-Best-Practices.md", "heading": "Trick CheckPointing Best Practices > Other Resources You Might Find Useful", "preview": "### Trick CheckPointing Best Practices > Other Resources You Might Find Useful  "}
{"chunk_id": "How-To-Python-Virtual-Environment_00", "type": "howto", "path": "howto_guides/How-To-Python-Virtual-Environment.md", "heading": "[References](#references)", "preview": "### [References](#references)  # HOWTO Setup a Python Virtual Environment   - [U"}
{"chunk_id": "How-To-Python-Virtual-Environment_01", "type": "howto", "path": "howto_guides/How-To-Python-Virtual-Environment.md", "heading": "[References](#references)", "preview": "### [References](#references)   command prompt.  ### [Installing Python Modules "}
{"chunk_id": "How-To-Python-Virtual-Environment_02", "type": "howto", "path": "howto_guides/How-To-Python-Virtual-Environment.md", "heading": "[References](#references)", "preview": "### [References](#references)  9  # The lastest version of Python % conda create"}
{"chunk_id": "How-To-Containerize-Trick-with-Docker_00", "type": "howto", "path": "howto_guides/How-To-Containerize-Trick-with-Docker.md", "heading": "THE END", "preview": "### THE END  # How to \"Containerize\" Trick With Docker  This HOWTO assumes that "}
{"chunk_id": "How-To-Containerize-Trick-with-Docker_01", "type": "howto", "path": "howto_guides/How-To-Containerize-Trick-with-Docker.md", "heading": "THE END", "preview": "### THE END  19.5.1 branch (an official release) of Trick from Github. RUN git c"}
{"chunk_id": "How-To-Containerize-Trick-with-Docker_02", "type": "howto", "path": "howto_guides/How-To-Containerize-Trick-with-Docker.md", "heading": "THE END", "preview": "### THE END  ize-a-trick-simulation></a> ## Containerize a Trick Simulation  ###"}
{"chunk_id": "How-To-Containerize-Trick-with-Docker_03", "type": "howto", "path": "howto_guides/How-To-Containerize-Trick-with-Docker.md", "heading": "THE END", "preview": "### THE END     https://raw.githubusercontent.com/nasa/trick/19.5.1/trick_sims/C"}
{"chunk_id": "How-To-Containerize-Trick-with-Docker_04", "type": "howto", "path": "howto_guides/How-To-Containerize-Trick-with-Docker.md", "heading": "THE END", "preview": "### THE END   Download CannonBoom.wav from [here](https://github.com/nasa/trick/"}
{"chunk_id": "How-To-Containerize-Trick-with-Docker_05", "type": "howto", "path": "howto_guides/How-To-Containerize-Trick-with-Docker.md", "heading": "THE END", "preview": "### THE END  ```  * Create a file named ```Dockerfile``` that contains the conte"}
{"chunk_id": "How-to-dump-core-file-on-MacOS_00", "type": "howto", "path": "howto_guides/How-to-dump-core-file-on-MacOS.md", "heading": "How to Dump a Core File on MacOS (Monterey 12.5) > Example Code: > makefile", "preview": "### How to Dump a Core File on MacOS (Monterey 12.5) > Example Code: > makefile "}
{"chunk_id": "How-To-Use-Inherited-Templates_00", "type": "howto", "path": "howto_guides/How-To-Use-Inherited-Templates.md", "heading": "How do I use inherited templates in the input file?", "preview": "### How do I use inherited templates in the input file?  | [Home](/trick) → [How"}
{"chunk_id": "How-To-Use-Inherited-Templates_01", "type": "howto", "path": "howto_guides/How-To-Use-Inherited-Templates.md", "heading": "How do I use inherited templates in the input file?", "preview": "### How do I use inherited templates in the input file?   ; } ;  template < type"}
{"chunk_id": "How-To-Exclude-Code_00", "type": "howto", "path": "howto_guides/How-To-Exclude-Code.md", "heading": "How do I exclude code from being processed by Trick? > Exclude directories via TRICK\\_ICG\\_EXCLUDE makefile or environment variable: > Exclude files via Trick header comment tag:", "preview": "### How do I exclude code from being processed by Trick? > Exclude directories v"}
{"chunk_id": "HOWTOgetSimulationTimeFromTheVariableServer_00", "type": "howto", "path": "howto_guides/HOWTOgetSimulationTimeFromTheVariableServer.md", "heading": "How to Get Simulation Time from the Variable Server > Example (SimTimeExample.py)", "preview": "### How to Get Simulation Time from the Variable Server > Example (SimTimeExampl"}
{"chunk_id": "HOWTOgetSimulationTimeFromTheVariableServer_01", "type": "howto", "path": "howto_guides/HOWTOgetSimulationTimeFromTheVariableServer.md", "heading": "How to Get Simulation Time from the Variable Server > Example (SimTimeExample.py)", "preview": "### How to Get Simulation Time from the Variable Server > Example (SimTimeExampl"}
{"chunk_id": "FAQ_00", "type": "troubleshoot", "path": "faq/FAQ.md", "heading": "Appendix > Is Trick gluten-free, grass-fed, organic, non-GMO, environmentally conservative, free-range, vegan, and dolphin safe?", "preview": "### Appendix > Is Trick gluten-free, grass-fed, organic, non-GMO, environmentall"}
{"chunk_id": "FAQ_01", "type": "troubleshoot", "path": "faq/FAQ.md", "heading": "Appendix > Is Trick gluten-free, grass-fed, organic, non-GMO, environmentally conservative, free-range, vegan, and dolphin safe?", "preview": "### Appendix > Is Trick gluten-free, grass-fed, organic, non-GMO, environmentall"}
{"chunk_id": "FAQ_02", "type": "troubleshoot", "path": "faq/FAQ.md", "heading": "Appendix > Is Trick gluten-free, grass-fed, organic, non-GMO, environmentally conservative, free-range, vegan, and dolphin safe?", "preview": "### Appendix > Is Trick gluten-free, grass-fed, organic, non-GMO, environmentall"}
{"chunk_id": "FAQ_03", "type": "troubleshoot", "path": "faq/FAQ.md", "heading": "Appendix > Is Trick gluten-free, grass-fed, organic, non-GMO, environmentally conservative, free-range, vegan, and dolphin safe?", "preview": "### Appendix > Is Trick gluten-free, grass-fed, organic, non-GMO, environmentall"}
{"chunk_id": "FAQ_04", "type": "troubleshoot", "path": "faq/FAQ.md", "heading": "Appendix > Is Trick gluten-free, grass-fed, organic, non-GMO, environmentally conservative, free-range, vegan, and dolphin safe?", "preview": "### Appendix > Is Trick gluten-free, grass-fed, organic, non-GMO, environmentall"}
{"chunk_id": "Related-Projects_00", "type": "reference", "path": "related_projects/Related-Projects.md", "heading": "NASA Projects > Multi-Mission Space Exploration Vehicle (MMSEV)", "preview": "### NASA Projects > Multi-Mission Space Exploration Vehicle (MMSEV)  | [Home](/t"}
{"chunk_id": "Related-Projects_01", "type": "reference", "path": "related_projects/Related-Projects.md", "heading": "NASA Projects > Multi-Mission Space Exploration Vehicle (MMSEV)", "preview": "### NASA Projects > Multi-Mission Space Exploration Vehicle (MMSEV)  -in-the-loo"}
{"chunk_id": "Documentation-Home_00", "type": "unknown", "path": "documentation/Documentation-Home.md", "heading": "User Guide", "preview": "### User Guide  | [Home](/trick) → Documentation Home | |-----------------------"}
{"chunk_id": "Documentation-Home_01", "type": "unknown", "path": "documentation/Documentation-Home.md", "heading": "User Guide", "preview": "### User Guide  simulation_capabilities/UserGuide-Monte-Carlo)     02. [Monte Ca"}
{"chunk_id": "SRS_00", "type": "concept", "path": "documentation/software_requirements_specification/SRS.md", "heading": "Introduction > Traceability to Parent Requirements", "preview": "### Introduction > Traceability to Parent Requirements  | [Home](/trick/index) →"}
{"chunk_id": "SRS_01", "type": "concept", "path": "documentation/software_requirements_specification/SRS.md", "heading": "Introduction > Traceability to Parent Requirements", "preview": "### Introduction > Traceability to Parent Requirements  01. Trick shall provide "}
{"chunk_id": "SRS_02", "type": "concept", "path": "documentation/software_requirements_specification/SRS.md", "heading": "Introduction > Traceability to Parent Requirements", "preview": "### Introduction > Traceability to Parent Requirements   synchronizing simulatio"}
{"chunk_id": "TrickOps_00", "type": "reference", "path": "documentation/miscellaneous_trick_tools/TrickOps.md", "heading": "TrickOps > More Information", "preview": "### TrickOps > More Information  | [Home](/trick) → [Documentation Home](../Docu"}
{"chunk_id": "TrickOps_01", "type": "reference", "path": "documentation/miscellaneous_trick_tools/TrickOps.md", "heading": "TrickOps > More Information", "preview": "### TrickOps > More Information   the question \"have I broken anything?\".  The p"}
{"chunk_id": "TrickOps_02", "type": "reference", "path": "documentation/miscellaneous_trick_tools/TrickOps.md", "heading": "TrickOps > More Information", "preview": "### TrickOps > More Information  ## The YAML File  The YAML file is a required i"}
{"chunk_id": "TrickOps_03", "type": "reference", "path": "documentation/miscellaneous_trick_tools/TrickOps.md", "heading": "TrickOps > More Information", "preview": "### TrickOps > More Information   or for any other project-defined       - verif"}
{"chunk_id": "TrickOps_04", "type": "reference", "path": "documentation/miscellaneous_trick_tools/TrickOps.md", "heading": "TrickOps > More Information", "preview": "### TrickOps > More Information   d vs. e            are supported as long as th"}
{"chunk_id": "TrickOps_05", "type": "reference", "path": "documentation/miscellaneous_trick_tools/TrickOps.md", "heading": "TrickOps > More Information", "preview": "### TrickOps > More Information   is *no limit* to number of `SIM`s, `runs:`, `c"}
{"chunk_id": "TrickOps_06", "type": "reference", "path": "documentation/miscellaneous_trick_tools/TrickOps.md", "heading": "TrickOps > More Information", "preview": "### TrickOps > More Information   any given time. The terminal window will accep"}
{"chunk_id": "TrickOps_07", "type": "reference", "path": "documentation/miscellaneous_trick_tools/TrickOps.md", "heading": "TrickOps > More Information", "preview": "### TrickOps > More Information  , log_dir='/tmp/',             trick_dir=trick_"}
{"chunk_id": "TrickOps_08", "type": "reference", "path": "documentation/miscellaneous_trick_tools/TrickOps.md", "heading": "TrickOps > More Information", "preview": "### TrickOps > More Information   purposes.  ```python from TrickWorkflow import"}
{"chunk_id": "TrickOps_09", "type": "reference", "path": "documentation/miscellaneous_trick_tools/TrickOps.md", "heading": "TrickOps > More Information", "preview": "### TrickOps > More Information  ` The required parameters are described as foll"}
{"chunk_id": "TrickOps_10", "type": "reference", "path": "documentation/miscellaneous_trick_tools/TrickOps.md", "heading": "TrickOps > More Information", "preview": "### TrickOps > More Information   your scripts are going to be run in a continuo"}
{"chunk_id": "TrickOps_11", "type": "reference", "path": "documentation/miscellaneous_trick_tools/TrickOps.md", "heading": "TrickOps > More Information", "preview": "### TrickOps > More Information  , header='Executing all sim runs.') ```  These "}
{"chunk_id": "TrickOps_12", "type": "reference", "path": "documentation/miscellaneous_trick_tools/TrickOps.md", "heading": "TrickOps > More Information", "preview": "### TrickOps > More Information         self.report()           # Print Verbose "}
{"chunk_id": "TrickOps_13", "type": "reference", "path": "documentation/miscellaneous_trick_tools/TrickOps.md", "heading": "TrickOps > More Information", "preview": "### TrickOps > More Information  /input.py:         compare:           - path/to"}
{"chunk_id": "TrickOps_14", "type": "reference", "path": "documentation/miscellaneous_trick_tools/TrickOps.md", "heading": "TrickOps > More Information", "preview": "### TrickOps > More Information   the run level r = self.get_sim('SIM_ball').get"}
{"chunk_id": "TrickOps_15", "type": "reference", "path": "documentation/miscellaneous_trick_tools/TrickOps.md", "heading": "TrickOps > More Information", "preview": "### TrickOps > More Information  iz_jobs, failures) = self.get_koviz_report_jobs"}
{"chunk_id": "TrickOps_16", "type": "reference", "path": "documentation/miscellaneous_trick_tools/TrickOps.md", "heading": "TrickOps > More Information", "preview": "### TrickOps > More Information   will be transformed into a `Job()` instance th"}
{"chunk_id": "TrickOps_17", "type": "reference", "path": "documentation/miscellaneous_trick_tools/TrickOps.md", "heading": "TrickOps > More Information", "preview": "### TrickOps > More Information  if.csv ``` In this example, `SIM_many_runs` has"}
{"chunk_id": "TrickOps_18", "type": "reference", "path": "documentation/miscellaneous_trick_tools/TrickOps.md", "heading": "TrickOps > More Information", "preview": "### TrickOps > More Information  phase` value of `0` by default. Consider this e"}
{"chunk_id": "TrickOps_19", "type": "reference", "path": "documentation/miscellaneous_trick_tools/TrickOps.md", "heading": "TrickOps > More Information", "preview": "### TrickOps > More Information   filtered by them when calling helper functions"}
{"chunk_id": "TrickOps_20", "type": "reference", "path": "documentation/miscellaneous_trick_tools/TrickOps.md", "heading": "TrickOps > More Information", "preview": "### TrickOps > More Information  .get_jobs(kind='analysis', phase=range(0, Trick"}
{"chunk_id": "TrickOps_21", "type": "reference", "path": "documentation/miscellaneous_trick_tools/TrickOps.md", "heading": "TrickOps > More Information", "preview": "### TrickOps > More Information   run jobs with phase 0  (All generated runs & R"}
{"chunk_id": "TrickOps_22", "type": "reference", "path": "documentation/miscellaneous_trick_tools/TrickOps.md", "heading": "TrickOps > More Information", "preview": "### TrickOps > More Information  , where output from a set of scenarios (like ge"}
{"chunk_id": "TrickOps_23", "type": "reference", "path": "documentation/miscellaneous_trick_tools/TrickOps.md", "heading": "TrickOps > More Information", "preview": "### TrickOps > More Information   Print to the screen and log a message internal"}
{"chunk_id": "TrickOps_24", "type": "reference", "path": "documentation/miscellaneous_trick_tools/TrickOps.md", "heading": "TrickOps > More Information", "preview": "### TrickOps > More Information  like `matlab`) that complicates everything!\"   "}
{"chunk_id": "TrickOps_25", "type": "reference", "path": "documentation/miscellaneous_trick_tools/TrickOps.md", "heading": "TrickOps > More Information", "preview": "### TrickOps > More Information  . * If `TrickWorkflow` encounters non-fatal err"}
{"chunk_id": "TrickOps_26", "type": "reference", "path": "documentation/miscellaneous_trick_tools/TrickOps.md", "heading": "TrickOps > More Information", "preview": "### TrickOps > More Information   generate monte-carlo runs and execute them loc"}
{"chunk_id": "TrickOps_27", "type": "reference", "path": "documentation/miscellaneous_trick_tools/TrickOps.md", "heading": "TrickOps > More Information", "preview": "### TrickOps > More Information    # Slurm: https://slurm.schedmd.com/documentat"}
{"chunk_id": "Miscellaneous-Trick-Tools_00", "type": "reference", "path": "documentation/miscellaneous_trick_tools/Miscellaneous-Trick-Tools.md", "heading": "Interface Code Generator - ICG > Checksumming", "preview": "### Interface Code Generator - ICG > Checksumming  | [Home](/trick) → [Documenta"}
{"chunk_id": "Miscellaneous-Trick-Tools_01", "type": "reference", "path": "documentation/miscellaneous_trick_tools/Miscellaneous-Trick-Tools.md", "heading": "Interface Code Generator - ICG > Checksumming", "preview": "### Interface Code Generator - ICG > Checksumming   units primitives allowed in "}
{"chunk_id": "Miscellaneous-Trick-Tools_02", "type": "reference", "path": "documentation/miscellaneous_trick_tools/Miscellaneous-Trick-Tools.md", "heading": "Interface Code Generator - ICG > Checksumming", "preview": "### Interface Code Generator - ICG > Checksumming   a library from a model direc"}
{"chunk_id": "Miscellaneous-Trick-Tools_03", "type": "reference", "path": "documentation/miscellaneous_trick_tools/Miscellaneous-Trick-Tools.md", "heading": "Interface Code Generator - ICG > Checksumming", "preview": "### Interface Code Generator - ICG > Checksumming   that directory or a library."}
{"chunk_id": "Miscellaneous-Trick-Tools_04", "type": "reference", "path": "documentation/miscellaneous_trick_tools/Miscellaneous-Trick-Tools.md", "heading": "Interface Code Generator - ICG > Checksumming", "preview": "### Interface Code Generator - ICG > Checksumming   a file that contains checksu"}
{"chunk_id": "Python-Variable-Server-Client_00", "type": "reference", "path": "documentation/miscellaneous_trick_tools/Python-Variable-Server-Client.md", "heading": "The API", "preview": "### The API  | [Home](/trick) → [Documentation Home](../Documentation-Home) → [M"}
{"chunk_id": "Python-Variable-Server-Client_01", "type": "reference", "path": "documentation/miscellaneous_trick_tools/Python-Variable-Server-Client.md", "heading": "The API", "preview": "### The API   handy little function called `close` that takes care of everything"}
{"chunk_id": "Python-Variable-Server-Client_02", "type": "reference", "path": "documentation/miscellaneous_trick_tools/Python-Variable-Server-Client.md", "heading": "The API", "preview": "### The API   7000) as variable_server:     # Hmmm, this syntax is a little stra"}
{"chunk_id": "Python-Variable-Server-Client_03", "type": "reference", "path": "documentation/miscellaneous_trick_tools/Python-Variable-Server-Client.md", "heading": "The API", "preview": "### The API   ```  If you don't know the host and port (sims select a random ava"}
{"chunk_id": "Python-Variable-Server-Client_04", "type": "reference", "path": "documentation/miscellaneous_trick_tools/Python-Variable-Server-Client.md", "heading": "The API", "preview": "### The API   to the input file relative to the simDirectory.     tag : str     "}
{"chunk_id": "Python-Variable-Server-Client_05", "type": "reference", "path": "documentation/miscellaneous_trick_tools/Python-Variable-Server-Client.md", "heading": "The API", "preview": "### The API   from the sim, so you can pass any function that accepts one argume"}
{"chunk_id": "Python-Variable-Server-Client_06", "type": "reference", "path": "documentation/miscellaneous_trick_tools/Python-Variable-Server-Client.md", "heading": "The API", "preview": "### The API   is true, so it will work just fine in conditionals.  ## Specifying"}
{"chunk_id": "Python-Variable-Server-Client_07", "type": "reference", "path": "documentation/miscellaneous_trick_tools/Python-Variable-Server-Client.md", "heading": "The API", "preview": "### The API   use the original units (kg, in this case)  ```python >>> variable_"}
{"chunk_id": "Python-Variable-Server-Client_08", "type": "reference", "path": "documentation/miscellaneous_trick_tools/Python-Variable-Server-Client.md", "heading": "The API", "preview": "### The API   to encapsulate that data in a class.  ## The `Variable` Class `Var"}
{"chunk_id": "Python-Variable-Server-Client_09", "type": "reference", "path": "documentation/miscellaneous_trick_tools/Python-Variable-Server-Client.md", "heading": "The API", "preview": "### The API  (name, expectedUnits) variable_server.UnitsConversionError: [ball.o"}
{"chunk_id": "Python-Variable-Server-Client_10", "type": "reference", "path": "documentation/miscellaneous_trick_tools/Python-Variable-Server-Client.md", "heading": "The API", "preview": "### The API  1]') >>> print 'The ball is at position ({0}, {1})'.format(*variabl"}
{"chunk_id": "Python-Variable-Server-Client_11", "type": "reference", "path": "documentation/miscellaneous_trick_tools/Python-Variable-Server-Client.md", "heading": "The API", "preview": "### The API   of its fields, and you shouldn't need to. Of course, this is Pytho"}
{"chunk_id": "Python-Variable-Server-Client_12", "type": "reference", "path": "documentation/miscellaneous_trick_tools/Python-Variable-Server-Client.md", "heading": "The API", "preview": "### The API   familiar with the core data structure: our old friend `Variable`. "}
{"chunk_id": "Python-Variable-Server-Client_13", "type": "reference", "path": "documentation/miscellaneous_trick_tools/Python-Variable-Server-Client.md", "heading": "The API", "preview": "### The API   with the above approach is that there's no synchronization between"}
{"chunk_id": "Python-Variable-Server-Client_14", "type": "reference", "path": "documentation/miscellaneous_trick_tools/Python-Variable-Server-Client.md", "heading": "The API", "preview": "### The API   instance is tracking, regardless of when they're added. If you wan"}
{"chunk_id": "Math-Utilities_00", "type": "concept", "path": "documentation/simulation_utilities/Math-Utilities.md", "heading": "Root", "preview": "### Root  | [Home](/trick) → [Documentation Home](../Documentation-Home) → [Simu"}
{"chunk_id": "Simulation-Utilities_00", "type": "concept", "path": "documentation/simulation_utilities/Simulation-Utilities.md", "heading": "Root", "preview": "### Root  | [Home](/trick) → [Documentation Home](../Documentation-Home) → Simul"}
{"chunk_id": "Trickcomm_00", "type": "concept", "path": "documentation/simulation_utilities/Trickcomm.md", "heading": "Root", "preview": "### Root  | [Home](/trick) → [Documentation Home](../Documentation-Home) → [Simu"}
{"chunk_id": "Extend-ws-api_00", "type": "reference", "path": "documentation/web/Extend-ws-api.md", "heading": "Extending the WebSocket-API > Testing The New WebSocket Interface > time.html", "preview": "### Extending the WebSocket-API > Testing The New WebSocket Interface > time.htm"}
{"chunk_id": "Extend-ws-api_01", "type": "reference", "path": "documentation/web/Extend-ws-api.md", "heading": "Extending the WebSocket-API > Testing The New WebSocket Interface > time.html", "preview": "### Extending the WebSocket-API > Testing The New WebSocket Interface > time.htm"}
{"chunk_id": "Extend-ws-api_02", "type": "reference", "path": "documentation/web/Extend-ws-api.md", "heading": "Extending the WebSocket-API > Testing The New WebSocket Interface > time.html", "preview": "### Extending the WebSocket-API > Testing The New WebSocket Interface > time.htm"}
{"chunk_id": "Extend-ws-api_03", "type": "reference", "path": "documentation/web/Extend-ws-api.md", "heading": "Extending the WebSocket-API > Testing The New WebSocket Interface > time.html", "preview": "### Extending the WebSocket-API > Testing The New WebSocket Interface > time.htm"}
{"chunk_id": "Extend-ws-api_04", "type": "reference", "path": "documentation/web/Extend-ws-api.md", "heading": "Extending the WebSocket-API > Testing The New WebSocket Interface > time.html", "preview": "### Extending the WebSocket-API > Testing The New WebSocket Interface > time.htm"}
{"chunk_id": "Extend-ws-api_05", "type": "reference", "path": "documentation/web/Extend-ws-api.md", "heading": "Extending the WebSocket-API > Testing The New WebSocket Interface > time.html", "preview": "### Extending the WebSocket-API > Testing The New WebSocket Interface > time.htm"}
{"chunk_id": "Extend-ws-api_06", "type": "reference", "path": "documentation/web/Extend-ws-api.md", "heading": "Extending the WebSocket-API > Testing The New WebSocket Interface > time.html", "preview": "### Extending the WebSocket-API > Testing The New WebSocket Interface > time.htm"}
{"chunk_id": "Webserver_00", "type": "reference", "path": "documentation/web/Webserver.md", "heading": "Adding a Web Server to Your Sim > The Default Document Root Directory", "preview": "### Adding a Web Server to Your Sim > The Default Document Root Directory  | [Ho"}
{"chunk_id": "Webserver_01", "type": "reference", "path": "documentation/web/Webserver.md", "heading": "Adding a Web Server to Your Sim > The Default Document Root Directory", "preview": "### Adding a Web Server to Your Sim > The Default Document Root Directory   acti"}
{"chunk_id": "Webserver_02", "type": "reference", "path": "documentation/web/Webserver.md", "heading": "Adding a Web Server to Your Sim > The Default Document Root Directory", "preview": "### Adding a Web Server to Your Sim > The Default Document Root Directory   conn"}
{"chunk_id": "Configure-Civetweb_00", "type": "reference", "path": "documentation/web/Configure-Civetweb.md", "heading": "Configuring Trick with Civetweb > Building the Civetweb Library > Configuring Trick with Civetweb", "preview": "### Configuring Trick with Civetweb > Building the Civetweb Library > Configurin"}
{"chunk_id": "SSL_00", "type": "reference", "path": "documentation/web/SSL.md", "heading": "Adding SSL Encryption to Your Webserver > Access your webserver", "preview": "### Adding SSL Encryption to Your Webserver > Access your webserver  | [Home](/t"}
{"chunk_id": "Webserver-apis_00", "type": "reference", "path": "documentation/web/Webserver-apis.md", "heading": "Web Server APIs", "preview": "### Web Server APIs  | [Home](/trick) → [Documentation Home](../Documentation-Ho"}
{"chunk_id": "Extend-http-api_00", "type": "reference", "path": "documentation/web/Extend-http-api.md", "heading": "Extending the HTTP-API > Example HTTP-API Extension > A Complete S_define", "preview": "### Extending the HTTP-API > Example HTTP-API Extension > A Complete S_define  |"}
{"chunk_id": "Extend-http-api_01", "type": "reference", "path": "documentation/web/Extend-http-api.md", "heading": "Extending the HTTP-API > Example HTTP-API Extension > A Complete S_define", "preview": "### Extending the HTTP-API > Example HTTP-API Extension > A Complete S_define  _"}
{"chunk_id": "Extend-http-api_02", "type": "reference", "path": "documentation/web/Extend-http-api.md", "heading": "Extending the HTTP-API > Example HTTP-API Extension > A Complete S_define", "preview": "### Extending the HTTP-API > Example HTTP-API Extension > A Complete S_define  a"}
{"chunk_id": "ws-variable-server-api_00", "type": "reference", "path": "documentation/web/ws-variable-server-api.md", "heading": "WS-API: VariableServer > Example Variable Server Client", "preview": "### WS-API: VariableServer > Example Variable Server Client  | [Home](/trick) → "}
{"chunk_id": "ws-variable-server-api_01", "type": "reference", "path": "documentation/web/ws-variable-server-api.md", "heading": "WS-API: VariableServer > Example Variable Server Client", "preview": "### WS-API: VariableServer > Example Variable Server Client  Execute the given P"}
{"chunk_id": "ws-variable-server-api_02", "type": "reference", "path": "documentation/web/ws-variable-server-api.md", "heading": "WS-API: VariableServer > Example Variable Server Client", "preview": "### WS-API: VariableServer > Example Variable Server Client  body>       <style>"}
{"chunk_id": "ws-variable-server-api_03", "type": "reference", "path": "documentation/web/ws-variable-server-api.md", "heading": "WS-API: VariableServer > Example Variable Server Client", "preview": "### WS-API: VariableServer > Example Variable Server Client  ('td');            "}
{"chunk_id": "ws-variable-server-api_04", "type": "reference", "path": "documentation/web/ws-variable-server-api.md", "heading": "WS-API: VariableServer > Example Variable Server Client", "preview": "### WS-API: VariableServer > Example Variable Server Client   = varTable.getElem"}
{"chunk_id": "http-alloc-api_00", "type": "reference", "path": "documentation/web/http-alloc-api.md", "heading": "HTTP-API: alloc_info > Example: > Query", "preview": "### HTTP-API: alloc_info > Example: > Query  | [Home](/trick) → [Documentation H"}
{"chunk_id": "http-alloc-api_01", "type": "reference", "path": "documentation/web/http-alloc-api.md", "heading": "HTTP-API: alloc_info > Example: > Query", "preview": "### HTTP-API: alloc_info > Example: > Query  | | ```name```    | Name of the all"}
{"chunk_id": "http-alloc-api_02", "type": "reference", "path": "documentation/web/http-alloc-api.md", "heading": "HTTP-API: alloc_info > Example: > Query", "preview": "### HTTP-API: alloc_info > Example: > Query  \",                    \"language\":\"L"}
{"chunk_id": "Threads_00", "type": "concept", "path": "documentation/simulation_capabilities/Threads.md", "heading": "The ThreadBase Class > ThreadBase Methods", "preview": "### The ThreadBase Class > ThreadBase Methods  | [Home](/trick) → [Documentation"}
{"chunk_id": "Simulation-Capabilities_00", "type": "concept", "path": "documentation/simulation_capabilities/Simulation-Capabilities.md", "heading": "Root", "preview": "### Root  | [Home](/trick) → [Documentation Home](../Documentation-Home) → Simul"}
{"chunk_id": "Executive-Scheduler_00", "type": "concept", "path": "documentation/simulation_capabilities/Executive-Scheduler.md", "heading": "Executive Flow > Debugging Help > Getting Build Information", "preview": "### Executive Flow > Debugging Help > Getting Build Information  | [Home](/trick"}
{"chunk_id": "Executive-Scheduler_01", "type": "concept", "path": "documentation/simulation_capabilities/Executive-Scheduler.md", "heading": "Executive Flow > Debugging Help > Getting Build Information", "preview": "### Executive Flow > Debugging Help > Getting Build Information   calls to set t"}
{"chunk_id": "Executive-Scheduler_02", "type": "concept", "path": "documentation/simulation_capabilities/Executive-Scheduler.md", "heading": "Executive Flow > Debugging Help > Getting Build Information", "preview": "### Executive Flow > Debugging Help > Getting Build Information   at the current"}
{"chunk_id": "Executive-Scheduler_03", "type": "concept", "path": "documentation/simulation_capabilities/Executive-Scheduler.md", "heading": "Executive Flow > Debugging Help > Getting Build Information", "preview": "### Executive Flow > Debugging Help > Getting Build Information   a sim_object o"}
{"chunk_id": "Executive-Scheduler_04", "type": "concept", "path": "documentation/simulation_capabilities/Executive-Scheduler.md", "heading": "Executive Flow > Debugging Help > Getting Build Information", "preview": "### Executive Flow > Debugging Help > Getting Build Information  iously spins wa"}
{"chunk_id": "Executive-Scheduler_05", "type": "concept", "path": "documentation/simulation_capabilities/Executive-Scheduler.md", "heading": "Executive Flow > Debugging Help > Getting Build Information", "preview": "### Executive Flow > Debugging Help > Getting Build Information   trapped by def"}
{"chunk_id": "Input-Processor_00", "type": "concept", "path": "documentation/simulation_capabilities/Input-Processor.md", "heading": "User accessible routines", "preview": "### User accessible routines  | [Home](/trick) → [Documentation Home](../Documen"}
{"chunk_id": "JIT-Input-Processor_00", "type": "concept", "path": "documentation/simulation_capabilities/JIT-Input-Processor.md", "heading": "Root", "preview": "### Root  | [Home](/trick) → [Documentation Home](../Documentation-Home) → [Simu"}
{"chunk_id": "JIT-Input-Processor_01", "type": "concept", "path": "documentation/simulation_capabilities/JIT-Input-Processor.md", "heading": "Root", "preview": "### Root  _event_before( \"run_event_before\", \"event_before\", \"ball.obj.state_pri"}
{"chunk_id": "Event-Manager_00", "type": "concept", "path": "documentation/simulation_capabilities/Event-Manager.md", "heading": "User accessible routines > Event Processing Flow", "preview": "### User accessible routines > Event Processing Flow  | [Home](/trick) → [Docume"}
{"chunk_id": "Realtime_00", "type": "concept", "path": "documentation/simulation_capabilities/Realtime.md", "heading": "User accessible routines", "preview": "### User accessible routines  | [Home](/trick) → [Documentation Home](../Documen"}
{"chunk_id": "Realtime_01", "type": "concept", "path": "documentation/simulation_capabilities/Realtime.md", "heading": "User accessible routines", "preview": "### User accessible routines   time to run the execution frame \\> real-time fram"}
{"chunk_id": "Realtime-Clock_00", "type": "concept", "path": "documentation/simulation_capabilities/Realtime-Clock.md", "heading": "Realtime-Clock > Looking For The Current Simulation Time ?", "preview": "### Realtime-Clock > Looking For The Current Simulation Time ?  | [Home](/trick)"}
{"chunk_id": "Realtime-Clock_01", "type": "concept", "path": "documentation/simulation_capabilities/Realtime-Clock.md", "heading": "Realtime-Clock > Looking For The Current Simulation Time ?", "preview": "### Realtime-Clock > Looking For The Current Simulation Time ?  ECLOCK_HH #defin"}
{"chunk_id": "Realtime-Timer_00", "type": "concept", "path": "documentation/simulation_capabilities/Realtime-Timer.md", "heading": "Root", "preview": "### Root  | [Home](/trick) → [Documentation Home](../Documentation-Home) → [Simu"}
{"chunk_id": "Realtime-Injector_00", "type": "concept", "path": "documentation/simulation_capabilities/Realtime-Injector.md", "heading": "Adding and Injecting Variables > Debugging Injections", "preview": "### Adding and Injecting Variables > Debugging Injections  | [Home](/trick) → [D"}
{"chunk_id": "UserGuide-Monte-Carlo_00", "type": "concept", "path": "documentation/simulation_capabilities/UserGuide-Monte-Carlo.md", "heading": "Using Monte Carlo > Function Overview", "preview": "### Using Monte Carlo > Function Overview  | [Home](/trick) → [Documentation Hom"}
{"chunk_id": "UserGuide-Monte-Carlo_01", "type": "concept", "path": "documentation/simulation_capabilities/UserGuide-Monte-Carlo.md", "heading": "Using Monte Carlo > Function Overview", "preview": "### Using Monte Carlo > Function Overview  .set_max(4.0) RandomVariable.set_sigm"}
{"chunk_id": "UserGuide-Monte-Carlo_02", "type": "concept", "path": "documentation/simulation_capabilities/UserGuide-Monte-Carlo.md", "heading": "Using Monte Carlo > Function Overview", "preview": "### Using Monte Carlo > Function Overview   will not exceed the fewest number of"}
{"chunk_id": "UserGuide-Monte-Carlo_03", "type": "concept", "path": "documentation/simulation_capabilities/UserGuide-Monte-Carlo.md", "heading": "Using Monte Carlo > Function Overview", "preview": "### Using Monte Carlo > Function Overview  \t| This file lists the values used fo"}
{"chunk_id": "UserGuide-Monte-Carlo_04", "type": "concept", "path": "documentation/simulation_capabilities/UserGuide-Monte-Carlo.md", "heading": "Using Monte Carlo > Function Overview", "preview": "### Using Monte Carlo > Function Overview  | mc\\_read\t\t\t\t\t\t\t\t| Gets the connecti"}
{"chunk_id": "Master-Slave_00", "type": "concept", "path": "documentation/simulation_capabilities/Master-Slave.md", "heading": "User accessible routines > Input File Setup > Dumping and Loading a Checkpoint", "preview": "### User accessible routines > Input File Setup > Dumping and Loading a Checkpoi"}
{"chunk_id": "Master-Slave_01", "type": "concept", "path": "documentation/simulation_capabilities/Master-Slave.md", "heading": "User accessible routines > Input File Setup > Dumping and Loading a Checkpoint", "preview": "### User accessible routines > Input File Setup > Dumping and Loading a Checkpoi"}
{"chunk_id": "Data-Record_00", "type": "concept", "path": "documentation/simulation_capabilities/Data-Record.md", "heading": "Format of Recording Groups > DRHDF5 Recording Format > Interaction with Checkpoints", "preview": "### Format of Recording Groups > DRHDF5 Recording Format > Interaction with Chec"}
{"chunk_id": "Data-Record_01", "type": "concept", "path": "documentation/simulation_capabilities/Data-Record.md", "heading": "Format of Recording Groups > DRHDF5 Recording Format > Interaction with Checkpoints", "preview": "### Format of Recording Groups > DRHDF5 Recording Format > Interaction with Chec"}
{"chunk_id": "Data-Record_02", "type": "concept", "path": "documentation/simulation_capabilities/Data-Record.md", "heading": "Format of Recording Groups > DRHDF5 Recording Format > Interaction with Checkpoints", "preview": "### Format of Recording Groups > DRHDF5 Recording Format > Interaction with Chec"}
{"chunk_id": "Data-Record_03", "type": "concept", "path": "documentation/simulation_capabilities/Data-Record.md", "heading": "Format of Recording Groups > DRHDF5 Recording Format > Interaction with Checkpoints", "preview": "### Format of Recording Groups > DRHDF5 Recording Format > Interaction with Chec"}
{"chunk_id": "Data-Record_04", "type": "concept", "path": "documentation/simulation_capabilities/Data-Record.md", "heading": "Format of Recording Groups > DRHDF5 Recording Format > Interaction with Checkpoints", "preview": "### Format of Recording Groups > DRHDF5 Recording Format > Interaction with Chec"}
{"chunk_id": "Checkpoints_00", "type": "concept", "path": "documentation/simulation_capabilities/Checkpoints.md", "heading": "Checkpointing", "preview": "### Checkpointing  | [Home](/trick) → [Documentation Home](../Documentation-Home"}
{"chunk_id": "MemoryManager_00", "type": "concept", "path": "documentation/simulation_capabilities/memory_manager/MemoryManager.md", "heading": "Trick Memory Manager > Unregistering/Deleting an Object", "preview": "### Trick Memory Manager > Unregistering/Deleting an Object  | [Home](/trick) → "}
{"chunk_id": "MemoryManager_01", "type": "concept", "path": "documentation/simulation_capabilities/memory_manager/MemoryManager.md", "heading": "Trick Memory Manager > Unregistering/Deleting an Object", "preview": "### Trick Memory Manager > Unregistering/Deleting an Object  [3]\"); double *D = "}
{"chunk_id": "MemoryManager_02", "type": "concept", "path": "documentation/simulation_capabilities/memory_manager/MemoryManager.md", "heading": "Trick Memory Manager > Unregistering/Deleting an Object", "preview": "### Trick Memory Manager > Unregistering/Deleting an Object   Memory Manager to "}
{"chunk_id": "MemoryManager_03", "type": "concept", "path": "documentation/simulation_capabilities/memory_manager/MemoryManager.md", "heading": "Trick Memory Manager > Unregistering/Deleting an Object", "preview": "### Trick Memory Manager > Unregistering/Deleting an Object   find the objects a"}
{"chunk_id": "MemoryManager_04", "type": "concept", "path": "documentation/simulation_capabilities/memory_manager/MemoryManager.md", "heading": "Trick Memory Manager > Unregistering/Deleting an Object", "preview": "### Trick Memory Manager > Unregistering/Deleting an Object   a two-dimensional "}
{"chunk_id": "MemoryManager_05", "type": "concept", "path": "documentation/simulation_capabilities/memory_manager/MemoryManager.md", "heading": "Trick Memory Manager > Unregistering/Deleting an Object", "preview": "### Trick Memory Manager > Unregistering/Deleting an Object   flag) ``` Where:  "}
{"chunk_id": "Integrator_00", "type": "concept", "path": "documentation/simulation_capabilities/Integrator.md", "heading": "Integrator Control Inputs", "preview": "### Integrator Control Inputs  | [Home](/trick) → [Documentation Home](../Docume"}
{"chunk_id": "Integrator_01", "type": "concept", "path": "documentation/simulation_capabilities/Integrator.md", "heading": "Integrator Control Inputs", "preview": "### Integrator Control Inputs   the S_define file; each integration job should h"}
{"chunk_id": "Integrator_02", "type": "concept", "path": "documentation/simulation_capabilities/Integrator.md", "heading": "Integrator Control Inputs", "preview": "### Integrator Control Inputs  >Nystrom_Lear_2</td>   <td>2nd Order</td>   <td>2"}
{"chunk_id": "Frame-Logging_00", "type": "concept", "path": "documentation/simulation_capabilities/Frame-Logging.md", "heading": "User accessible routines", "preview": "### User accessible routines  | [Home](/trick) → [Documentation Home](../Documen"}
{"chunk_id": "Debug-Pause_00", "type": "concept", "path": "documentation/simulation_capabilities/Debug-Pause.md", "heading": "Root", "preview": "### Root  | [Home](/trick) → [Documentation Home](../Documentation-Home) → [Simu"}
{"chunk_id": "Echo-Jobs_00", "type": "concept", "path": "documentation/simulation_capabilities/Echo-Jobs.md", "heading": "User accessible routines", "preview": "### User accessible routines  | [Home](/trick) → [Documentation Home](../Documen"}
{"chunk_id": "Variable-Server_00", "type": "concept", "path": "documentation/simulation_capabilities/Variable-Server.md", "heading": "User accessible routines > Variable Server Broadcast Channel", "preview": "### User accessible routines > Variable Server Broadcast Channel  | [Home](/tric"}
{"chunk_id": "Variable-Server_01", "type": "concept", "path": "documentation/simulation_capabilities/Variable-Server.md", "heading": "User accessible routines > Variable Server Broadcast Channel", "preview": "### User accessible routines > Variable Server Broadcast Channel   specific for "}
{"chunk_id": "Variable-Server_02", "type": "concept", "path": "documentation/simulation_capabilities/Variable-Server.md", "heading": "User accessible routines > Variable Server Broadcast Channel", "preview": "### User accessible routines > Variable Server Broadcast Channel   done in the m"}
{"chunk_id": "Variable-Server_03", "type": "concept", "path": "documentation/simulation_capabilities/Variable-Server.md", "heading": "User accessible routines > Variable Server Broadcast Channel", "preview": "### User accessible routines > Variable Server Broadcast Channel   of printing t"}
{"chunk_id": "Variable-Server_04", "type": "concept", "path": "documentation/simulation_capabilities/Variable-Server.md", "heading": "User accessible routines > Variable Server Broadcast Channel", "preview": "### User accessible routines > Variable Server Broadcast Channel   below.  | Nam"}
{"chunk_id": "Variable-Server_05", "type": "concept", "path": "documentation/simulation_capabilities/Variable-Server.md", "heading": "User accessible routines > Variable Server Broadcast Channel", "preview": "### User accessible routines > Variable Server Broadcast Channel    This is indi"}
{"chunk_id": "Variable-Server_06", "type": "concept", "path": "documentation/simulation_capabilities/Variable-Server.md", "heading": "User accessible routines > Variable Server Broadcast Channel", "preview": "### User accessible routines > Variable Server Broadcast Channel      // Set up "}
{"chunk_id": "Status-Message-System_00", "type": "concept", "path": "documentation/simulation_capabilities/Status-Message-System.md", "heading": "Message Publisher > User accessible routines", "preview": "### Message Publisher > User accessible routines  | [Home](/trick) → [Documentat"}
{"chunk_id": "Status-Message-System_01", "type": "concept", "path": "documentation/simulation_capabilities/Status-Message-System.md", "heading": "Message Publisher > User accessible routines", "preview": "### Message Publisher > User accessible routines   and returns the level that ca"}
{"chunk_id": "Command-Line-Arguments_00", "type": "concept", "path": "documentation/simulation_capabilities/Command-Line-Arguments.md", "heading": "Accessing the Command Line Arguments > TimeStamping the Output Directory", "preview": "### Accessing the Command Line Arguments > TimeStamping the Output Directory  | "}
{"chunk_id": "Environment_00", "type": "concept", "path": "documentation/simulation_capabilities/Environment.md", "heading": "Root", "preview": "### Root  | [Home](/trick) → [Documentation Home](../Documentation-Home) → [Simu"}
{"chunk_id": "MemoryManager-Declaration-String_00", "type": "concept", "path": "documentation/simulation_capabilities/memory_manager/MemoryManager-Declaration-String.md", "heading": "Memory Manager Declaration > Intrinsic Type Specifiers > User Defined Type Specifiers", "preview": "### Memory Manager Declaration > Intrinsic Type Specifiers > User Defined Type S"}
{"chunk_id": "MemoryManager-TRICK_TYPE_00", "type": "concept", "path": "documentation/simulation_capabilities/memory_manager/MemoryManager-TRICK_TYPE.md", "heading": "Root", "preview": "### Root  | [Home](/trick) → [Documentation Home](../../Documentation-Home) → [S"}
{"chunk_id": "Input-File_00", "type": "howto", "path": "documentation/running_a_simulation/Input-File.md", "heading": "Accessing Simulation Parameters > I Just Want to Know How Do I Set this Value...", "preview": "### Accessing Simulation Parameters > I Just Want to Know How Do I Set this Valu"}
{"chunk_id": "Input-File_01", "type": "howto", "path": "documentation/running_a_simulation/Input-File.md", "heading": "Accessing Simulation Parameters > I Just Want to Know How Do I Set this Value...", "preview": "### Accessing Simulation Parameters > I Just Want to Know How Do I Set this Valu"}
{"chunk_id": "Input-File_02", "type": "howto", "path": "documentation/running_a_simulation/Input-File.md", "heading": "Accessing Simulation Parameters > I Just Want to Know How Do I Set this Value...", "preview": "### Accessing Simulation Parameters > I Just Want to Know How Do I Set this Valu"}
{"chunk_id": "Input-File_03", "type": "howto", "path": "documentation/running_a_simulation/Input-File.md", "heading": "Accessing Simulation Parameters > I Just Want to Know How Do I Set this Value...", "preview": "### Accessing Simulation Parameters > I Just Want to Know How Do I Set this Valu"}
{"chunk_id": "Input-File_04", "type": "howto", "path": "documentation/running_a_simulation/Input-File.md", "heading": "Accessing Simulation Parameters > I Just Want to Know How Do I Set this Value...", "preview": "### Accessing Simulation Parameters > I Just Want to Know How Do I Set this Valu"}
{"chunk_id": "Input-File_05", "type": "howto", "path": "documentation/running_a_simulation/Input-File.md", "heading": "Accessing Simulation Parameters > I Just Want to Know How Do I Set this Value...", "preview": "### Accessing Simulation Parameters > I Just Want to Know How Do I Set this Valu"}
{"chunk_id": "Input-File_06", "type": "howto", "path": "documentation/running_a_simulation/Input-File.md", "heading": "Accessing Simulation Parameters > I Just Want to Know How Do I Set this Value...", "preview": "### Accessing Simulation Parameters > I Just Want to Know How Do I Set this Valu"}
{"chunk_id": "Input-File_07", "type": "howto", "path": "documentation/running_a_simulation/Input-File.md", "heading": "Accessing Simulation Parameters > I Just Want to Know How Do I Set this Value...", "preview": "### Accessing Simulation Parameters > I Just Want to Know How Do I Set this Valu"}
{"chunk_id": "Input-File_08", "type": "howto", "path": "documentation/running_a_simulation/Input-File.md", "heading": "Accessing Simulation Parameters > I Just Want to Know How Do I Set this Value...", "preview": "### Accessing Simulation Parameters > I Just Want to Know How Do I Set this Valu"}
{"chunk_id": "Input-File_09", "type": "howto", "path": "documentation/running_a_simulation/Input-File.md", "heading": "Accessing Simulation Parameters > I Just Want to Know How Do I Set this Value...", "preview": "### Accessing Simulation Parameters > I Just Want to Know How Do I Set this Valu"}
{"chunk_id": "Input-File_10", "type": "howto", "path": "documentation/running_a_simulation/Input-File.md", "heading": "Accessing Simulation Parameters > I Just Want to Know How Do I Set this Value...", "preview": "### Accessing Simulation Parameters > I Just Want to Know How Do I Set this Valu"}
{"chunk_id": "Input-File_11", "type": "howto", "path": "documentation/running_a_simulation/Input-File.md", "heading": "Accessing Simulation Parameters > I Just Want to Know How Do I Set this Value...", "preview": "### Accessing Simulation Parameters > I Just Want to Know How Do I Set this Valu"}
{"chunk_id": "Input-File_12", "type": "howto", "path": "documentation/running_a_simulation/Input-File.md", "heading": "Accessing Simulation Parameters > I Just Want to Know How Do I Set this Value...", "preview": "### Accessing Simulation Parameters > I Just Want to Know How Do I Set this Valu"}
{"chunk_id": "Runtime-GUIs_00", "type": "howto", "path": "documentation/running_a_simulation/runtime_guis/Runtime-GUIs.md", "heading": "[Sim Control Panel](SimControlPanel) > Shared Options > Application Behavior", "preview": "### [Sim Control Panel](SimControlPanel) > Shared Options > Application Behavior"}
{"chunk_id": "Runtime-GUIs_01", "type": "howto", "path": "documentation/running_a_simulation/runtime_guis/Runtime-GUIs.md", "heading": "[Sim Control Panel](SimControlPanel) > Shared Options > Application Behavior", "preview": "### [Sim Control Panel](SimControlPanel) > Shared Options > Application Behavior"}
{"chunk_id": "Runtime-GUIs_02", "type": "howto", "path": "documentation/running_a_simulation/runtime_guis/Runtime-GUIs.md", "heading": "[Sim Control Panel](SimControlPanel) > Shared Options > Application Behavior", "preview": "### [Sim Control Panel](SimControlPanel) > Shared Options > Application Behavior"}
{"chunk_id": "Runtime-Output_00", "type": "howto", "path": "documentation/running_a_simulation/Runtime-Output.md", "heading": "Root", "preview": "### Root  | [Home](/trick) → [Documentation Home](../Documentation-Home) → [Runn"}
{"chunk_id": "Data-Products_00", "type": "concept", "path": "documentation/data_products/Data-Products.md", "heading": "Root", "preview": "### Root  | [Home](/trick) → [Documentation Home](../Documentation-Home) → Data "}
{"chunk_id": "DP-Session-File-Format_00", "type": "concept", "path": "documentation/data_products/DP-Session-File-Format.md", "heading": "Session.dtd > DP Session File Example", "preview": "### Session.dtd > DP Session File Example  | [Home](/trick) → [Documentation Hom"}
{"chunk_id": "DP-Session-File-Format_01", "type": "concept", "path": "documentation/data_products/DP-Session-File-Format.md", "heading": "Session.dtd > DP Session File Example", "preview": "### Session.dtd > DP Session File Example  </b>. The <b>Simple</b> option will d"}
{"chunk_id": "DP-Product-File-Format_00", "type": "concept", "path": "documentation/data_products/DP-Product-File-Format.md", "heading": "Product.dtd > A general DP Product XML File Example", "preview": "### Product.dtd > A general DP Product XML File Example  | [Home](/trick) → [Doc"}
{"chunk_id": "DP-Product-File-Format_01", "type": "concept", "path": "documentation/data_products/DP-Product-File-Format.md", "heading": "Product.dtd > A general DP Product XML File Example", "preview": "### Product.dtd > A general DP Product XML File Example   CDATA #IMPLIED>  <!-- "}
{"chunk_id": "DP-Product-File-Format_02", "type": "concept", "path": "documentation/data_products/DP-Product-File-Format.md", "heading": "Product.dtd > A general DP Product XML File Example", "preview": "### Product.dtd > A general DP Product XML File Example  > attribute of <b>var</"}
{"chunk_id": "DP-Product-File-Format_03", "type": "concept", "path": "documentation/data_products/DP-Product-File-Format.md", "heading": "Product.dtd > A general DP Product XML File Example", "preview": "### Product.dtd > A general DP Product XML File Example   (Y) variables from RUN"}
{"chunk_id": "DP-Product-File-Format_04", "type": "concept", "path": "documentation/data_products/DP-Product-File-Format.md", "heading": "Product.dtd > A general DP Product XML File Example", "preview": "### Product.dtd > A general DP Product XML File Example                  -- ----"}
{"chunk_id": "DP-Product-File-Format_05", "type": "concept", "path": "documentation/data_products/DP-Product-File-Format.md", "heading": "Product.dtd > A general DP Product XML File Example", "preview": "### Product.dtd > A general DP Product XML File Example  353e+00 ```  ## DP Exte"}
{"chunk_id": "DP-Product-File-Format_06", "type": "concept", "path": "documentation/data_products/DP-Product-File-Format.md", "heading": "Product.dtd > A general DP Product XML File Example", "preview": "### Product.dtd > A general DP Product XML File Example   int numIn __attribute_"}
{"chunk_id": "Plot-Printing_00", "type": "concept", "path": "documentation/data_products/Plot-Printing.md", "heading": "Root", "preview": "### Root  | [Home](/trick) → [Documentation Home](../Documentation-Home) → [Data"}
{"chunk_id": "Data-Products-GUIs_00", "type": "concept", "path": "documentation/data_products/Data-Products-GUIs.md", "heading": "Trick DP - Data Products Application > Viewing Data > Using External Program", "preview": "### Trick DP - Data Products Application > Viewing Data > Using External Program"}
{"chunk_id": "Data-Products-GUIs_01", "type": "concept", "path": "documentation/data_products/Data-Products-GUIs.md", "heading": "Trick DP - Data Products Application > Viewing Data > Using External Program", "preview": "### Trick DP - Data Products Application > Viewing Data > Using External Program"}
{"chunk_id": "Data-Products-GUIs_02", "type": "concept", "path": "documentation/data_products/Data-Products-GUIs.md", "heading": "Trick DP - Data Products Application > Viewing Data > Using External Program", "preview": "### Trick DP - Data Products Application > Viewing Data > Using External Program"}
{"chunk_id": "Data-Products-GUIs_03", "type": "concept", "path": "documentation/data_products/Data-Products-GUIs.md", "heading": "Trick DP - Data Products Application > Viewing Data > Using External Program", "preview": "### Trick DP - Data Products Application > Viewing Data > Using External Program"}
{"chunk_id": "Data-Products-GUIs_04", "type": "concept", "path": "documentation/data_products/Data-Products-GUIs.md", "heading": "Trick DP - Data Products Application > Viewing Data > Using External Program", "preview": "### Trick DP - Data Products Application > Viewing Data > Using External Program"}
{"chunk_id": "Data-Products-GUIs_05", "type": "concept", "path": "documentation/data_products/Data-Products-GUIs.md", "heading": "Trick DP - Data Products Application > Viewing Data > Using External Program", "preview": "### Trick DP - Data Products Application > Viewing Data > Using External Program"}
{"chunk_id": "Data-Products-GUIs_06", "type": "concept", "path": "documentation/data_products/Data-Products-GUIs.md", "heading": "Trick DP - Data Products Application > Viewing Data > Using External Program", "preview": "### Trick DP - Data Products Application > Viewing Data > Using External Program"}
{"chunk_id": "Data-Products-GUIs_07", "type": "concept", "path": "documentation/data_products/Data-Products-GUIs.md", "heading": "Trick DP - Data Products Application > Viewing Data > Using External Program", "preview": "### Trick DP - Data Products Application > Viewing Data > Using External Program"}
{"chunk_id": "Data-Products-GUIs_08", "type": "concept", "path": "documentation/data_products/Data-Products-GUIs.md", "heading": "Trick DP - Data Products Application > Viewing Data > Using External Program", "preview": "### Trick DP - Data Products Application > Viewing Data > Using External Program"}
{"chunk_id": "Data-Products-GUIs_09", "type": "concept", "path": "documentation/data_products/Data-Products-GUIs.md", "heading": "Trick DP - Data Products Application > Viewing Data > Using External Program", "preview": "### Trick DP - Data Products Application > Viewing Data > Using External Program"}
{"chunk_id": "Data-Products-GUIs_10", "type": "concept", "path": "documentation/data_products/Data-Products-GUIs.md", "heading": "Trick DP - Data Products Application > Viewing Data > Using External Program", "preview": "### Trick DP - Data Products Application > Viewing Data > Using External Program"}
{"chunk_id": "Running-a-Simulation_00", "type": "howto", "path": "documentation/running_a_simulation/Running-a-Simulation.md", "heading": "Root", "preview": "### Root  | [Home](/trick) → [Documentation Home](../Documentation-Home) → Runni"}
{"chunk_id": "Running-a-Simulation_01", "type": "howto", "path": "documentation/running_a_simulation/Running-a-Simulation.md", "heading": "Root", "preview": "### Root  , the `RUN_<name>` directory is used.   - Two subdirectories are autom"}
{"chunk_id": "Running-a-Simulation_02", "type": "howto", "path": "documentation/running_a_simulation/Running-a-Simulation.md", "heading": "Root", "preview": "### Root   execution.  ```c++ #include \"trick/command_line_protos.h\"  void test_"}
{"chunk_id": "MonteMonitor_00", "type": "howto", "path": "documentation/running_a_simulation/runtime_guis/MonteMonitor.md", "heading": "Monte Monitor > Launching > Starting and Stopping", "preview": "### Monte Monitor > Launching > Starting and Stopping  | [Home](/trick) → [Docum"}
{"chunk_id": "MonteMonitor_01", "type": "howto", "path": "documentation/running_a_simulation/runtime_guis/MonteMonitor.md", "heading": "Monte Monitor > Launching > Starting and Stopping", "preview": "### Monte Monitor > Launching > Starting and Stopping  </b><br>     The slave is"}
{"chunk_id": "MalfunctionsTrickView_00", "type": "howto", "path": "documentation/running_a_simulation/runtime_guis/MalfunctionsTrickView.md", "heading": "Events/Malfunctions Trick View > Launching > The MTV GUI (in Edit Mode)", "preview": "### Events/Malfunctions Trick View > Launching > The MTV GUI (in Edit Mode)  | ["}
{"chunk_id": "MalfunctionsTrickView_01", "type": "howto", "path": "documentation/running_a_simulation/runtime_guis/MalfunctionsTrickView.md", "heading": "Events/Malfunctions Trick View > Launching > The MTV GUI (in Edit Mode)", "preview": "### Events/Malfunctions Trick View > Launching > The MTV GUI (in Edit Mode)   ev"}
{"chunk_id": "MalfunctionsTrickView_02", "type": "howto", "path": "documentation/running_a_simulation/runtime_guis/MalfunctionsTrickView.md", "heading": "Events/Malfunctions Trick View > Launching > The MTV GUI (in Edit Mode)", "preview": "### Events/Malfunctions Trick View > Launching > The MTV GUI (in Edit Mode)   as"}
{"chunk_id": "MalfunctionsTrickView_03", "type": "howto", "path": "documentation/running_a_simulation/runtime_guis/MalfunctionsTrickView.md", "heading": "Events/Malfunctions Trick View > Launching > The MTV GUI (in Edit Mode)", "preview": "### Events/Malfunctions Trick View > Launching > The MTV GUI (in Edit Mode)   th"}
{"chunk_id": "MalfunctionsTrickView_04", "type": "howto", "path": "documentation/running_a_simulation/runtime_guis/MalfunctionsTrickView.md", "heading": "Events/Malfunctions Trick View > Launching > The MTV GUI (in Edit Mode)", "preview": "### Events/Malfunctions Trick View > Launching > The MTV GUI (in Edit Mode)   th"}
{"chunk_id": "MalfunctionsTrickView_05", "type": "howto", "path": "documentation/running_a_simulation/runtime_guis/MalfunctionsTrickView.md", "heading": "Events/Malfunctions Trick View > Launching > The MTV GUI (in Edit Mode)", "preview": "### Events/Malfunctions Trick View > Launching > The MTV GUI (in Edit Mode)   th"}
{"chunk_id": "MalfunctionsTrickView_06", "type": "howto", "path": "documentation/running_a_simulation/runtime_guis/MalfunctionsTrickView.md", "heading": "Events/Malfunctions Trick View > Launching > The MTV GUI (in Edit Mode)", "preview": "### Events/Malfunctions Trick View > Launching > The MTV GUI (in Edit Mode)   wi"}
{"chunk_id": "TrickView_00", "type": "howto", "path": "documentation/running_a_simulation/runtime_guis/TrickView.md", "heading": "Launching > Automatically Opening Files > TV Files", "preview": "### Launching > Automatically Opening Files > TV Files  | [Home](/trick) → [Docu"}
{"chunk_id": "TrickView_01", "type": "howto", "path": "documentation/running_a_simulation/runtime_guis/TrickView.md", "heading": "Launching > Automatically Opening Files > TV Files", "preview": "### Launching > Automatically Opening Files > TV Files   the directory from whic"}
{"chunk_id": "TrickView_02", "type": "howto", "path": "documentation/running_a_simulation/runtime_guis/TrickView.md", "heading": "Launching > Automatically Opening Files > TV Files", "preview": "### Launching > Automatically Opening Files > TV Files   A black screen indicate"}
{"chunk_id": "TrickView_03", "type": "howto", "path": "documentation/running_a_simulation/runtime_guis/TrickView.md", "heading": "Launching > Automatically Opening Files > TV Files", "preview": "### Launching > Automatically Opening Files > TV Files  imum`. Character pointer"}
{"chunk_id": "TrickView_04", "type": "howto", "path": "documentation/running_a_simulation/runtime_guis/TrickView.md", "heading": "Launching > Automatically Opening Files > TV Files", "preview": "### Launching > Automatically Opening Files > TV Files   in red. Such a variable"}
{"chunk_id": "TrickView_05", "type": "howto", "path": "documentation/running_a_simulation/runtime_guis/TrickView.md", "heading": "Launching > Automatically Opening Files > TV Files", "preview": "### Launching > Automatically Opening Files > TV Files    Variables are sorted a"}
{"chunk_id": "TrickView_06", "type": "howto", "path": "documentation/running_a_simulation/runtime_guis/TrickView.md", "heading": "Launching > Automatically Opening Files > TV Files", "preview": "### Launching > Automatically Opening Files > TV Files   To remove a dependent v"}
{"chunk_id": "TrickView_07", "type": "howto", "path": "documentation/running_a_simulation/runtime_guis/TrickView.md", "heading": "Launching > Automatically Opening Files > TV Files", "preview": "### Launching > Automatically Opening Files > TV Files   series properties is no"}
{"chunk_id": "SimControlPanel_00", "type": "howto", "path": "documentation/running_a_simulation/runtime_guis/SimControlPanel.md", "heading": "Sim Control Panel > Launching > The GUI", "preview": "### Sim Control Panel > Launching > The GUI  | [Home](/trick) → [Documentation H"}
{"chunk_id": "SimControlPanel_01", "type": "howto", "path": "documentation/running_a_simulation/runtime_guis/SimControlPanel.md", "heading": "Sim Control Panel > Launching > The GUI", "preview": "### Sim Control Panel > Launching > The GUI   / Real-Time Ratio. By default, the"}
{"chunk_id": "STL-capabilities_00", "type": "concept", "path": "documentation/simulation_capabilities/STL-capabilities.md", "heading": "Standard Template Libraries (STL) in Trick > Limitations > You cannot directly create or register an external stl with the memory manager, you will get a parser error.", "preview": "### Standard Template Libraries (STL) in Trick > Limitations > You cannot direct"}
{"chunk_id": "MonteCarloGeneration_00", "type": "reference", "path": "documentation/miscellaneous_trick_tools/MonteCarloGeneration.md", "heading": "5 Verification", "preview": "### 5 Verification  # MonteCarloGeneration Model  # Revision History | Version |"}
{"chunk_id": "MonteCarloGeneration_01", "type": "reference", "path": "documentation/miscellaneous_trick_tools/MonteCarloGeneration.md", "heading": "5 Verification", "preview": "### 5 Verification   cases occur out near the edges of state-space, but most of "}
{"chunk_id": "MonteCarloGeneration_02", "type": "reference", "path": "documentation/miscellaneous_trick_tools/MonteCarloGeneration.md", "heading": "5 Verification", "preview": "### 5 Verification  1. The model shall provide the ability to assign a common va"}
{"chunk_id": "MonteCarloGeneration_03", "type": "reference", "path": "documentation/miscellaneous_trick_tools/MonteCarloGeneration.md", "heading": "5 Verification", "preview": "### 5 Verification  Master)   MonteCarloMaster is the manager of the MonteCarlo "}
{"chunk_id": "MonteCarloGeneration_04", "type": "reference", "path": "documentation/miscellaneous_trick_tools/MonteCarloGeneration.md", "heading": "5 Verification", "preview": "### 5 Verification   sets and file2 contained 4 data sets, then a sequential swe"}
{"chunk_id": "MonteCarloGeneration_05", "type": "reference", "path": "documentation/miscellaneous_trick_tools/MonteCarloGeneration.md", "heading": "5 Verification", "preview": "### 5 Verification  distribution specified by its upper and lower bounds. This c"}
{"chunk_id": "MonteCarloGeneration_06", "type": "reference", "path": "documentation/miscellaneous_trick_tools/MonteCarloGeneration.md", "heading": "5 Verification", "preview": "### 5 Verification  1) still allows for scaling to the eventual size of the stri"}
{"chunk_id": "MonteCarloGeneration_07", "type": "reference", "path": "documentation/miscellaneous_trick_tools/MonteCarloGeneration.md", "heading": "5 Verification", "preview": "### 5 Verification   to the right of that symbol will be assigned to this variab"}
{"chunk_id": "MonteCarloGeneration_08", "type": "reference", "path": "documentation/miscellaneous_trick_tools/MonteCarloGeneration.md", "heading": "5 Verification", "preview": "### 5 Verification   are insufficient, such as when one generated-value that fee"}
{"chunk_id": "MonteCarloGeneration_09", "type": "reference", "path": "documentation/miscellaneous_trick_tools/MonteCarloGeneration.md", "heading": "5 Verification", "preview": "### 5 Verification   a wild-card, \\<executive\\> `MONTE_RUN_test/RUN*/monte_input"}
{"chunk_id": "MonteCarloGeneration_10", "type": "reference", "path": "documentation/miscellaneous_trick_tools/MonteCarloGeneration.md", "heading": "5 Verification", "preview": "### 5 Verification  ```c++ // TODO: Pick a unit-conversion mechanism // Right no"}
{"chunk_id": "MonteCarloGeneration_11", "type": "reference", "path": "documentation/miscellaneous_trick_tools/MonteCarloGeneration.md", "heading": "5 Verification", "preview": "### 5 Verification   construction of this instance takes a single argument, a ST"}
{"chunk_id": "MonteCarloGeneration_12", "type": "reference", "path": "documentation/miscellaneous_trick_tools/MonteCarloGeneration.md", "heading": "5 Verification", "preview": "### 5 Verification  -input to the simulation without requiring re-compilation; a"}
{"chunk_id": "MonteCarloGeneration_13", "type": "reference", "path": "documentation/miscellaneous_trick_tools/MonteCarloGeneration.md", "heading": "5 Verification", "preview": "### 5 Verification   `active` flag set to true instructs the simulation that the"}
{"chunk_id": "MonteCarloGeneration_14", "type": "reference", "path": "documentation/miscellaneous_trick_tools/MonteCarloGeneration.md", "heading": "5 Verification", "preview": "### 5 Verification  onte_carlo.py”).read())  if monte_carlo.master.generate_disp"}
{"chunk_id": "MonteCarloGeneration_15", "type": "reference", "path": "documentation/miscellaneous_trick_tools/MonteCarloGeneration.md", "heading": "5 Verification", "preview": "### 5 Verification   RUN_02, RUN_03, etc. each of which will contain one of the "}
{"chunk_id": "MonteCarloGeneration_16", "type": "reference", "path": "documentation/miscellaneous_trick_tools/MonteCarloGeneration.md", "heading": "5 Verification", "preview": "### 5 Verification   method runs. This is particularly useful if it is desired t"}
{"chunk_id": "MonteCarloGeneration_17", "type": "reference", "path": "documentation/miscellaneous_trick_tools/MonteCarloGeneration.md", "heading": "5 Verification", "preview": "### 5 Verification  00000, RUN_00001, and RUN_00002, in which case the minimum-p"}
{"chunk_id": "MonteCarloGeneration_18", "type": "reference", "path": "documentation/miscellaneous_trick_tools/MonteCarloGeneration.md", "heading": "5 Verification", "preview": "### 5 Verification  3. Create the new instance using its constructor. 4. Registe"}
{"chunk_id": "MonteCarloGeneration_19", "type": "reference", "path": "documentation/miscellaneous_trick_tools/MonteCarloGeneration.md", "heading": "5 Verification", "preview": "### 5 Verification  persions` flag is completely redundant because the variables"}
{"chunk_id": "MonteCarloGeneration_20", "type": "reference", "path": "documentation/miscellaneous_trick_tools/MonteCarloGeneration.md", "heading": "5 Verification", "preview": "### 5 Verification   be registered with the master in the constructor rather tha"}
{"chunk_id": "MonteCarloGeneration_21", "type": "reference", "path": "documentation/miscellaneous_trick_tools/MonteCarloGeneration.md", "heading": "5 Verification", "preview": "### 5 Verification  e_carlo.master.generate_dispersions:  monte_carlo_variables."}
{"chunk_id": "MonteCarloGeneration_22", "type": "reference", "path": "documentation/miscellaneous_trick_tools/MonteCarloGeneration.md", "heading": "5 Verification", "preview": "### 5 Verification   match (including the case of a dimensionless value), this m"}
{"chunk_id": "MonteCarloGeneration_23", "type": "reference", "path": "documentation/miscellaneous_trick_tools/MonteCarloGeneration.md", "heading": "5 Verification", "preview": "### 5 Verification   are: 1. variable name 2. seed for random generator, default"}
{"chunk_id": "MonteCarloGeneration_24", "type": "reference", "path": "documentation/miscellaneous_trick_tools/MonteCarloGeneration.md", "heading": "5 Verification", "preview": "### 5 Verification   value is calculated according to the following rules: * For"}
{"chunk_id": "MonteCarloGeneration_25", "type": "reference", "path": "documentation/miscellaneous_trick_tools/MonteCarloGeneration.md", "heading": "5 Verification", "preview": "### 5 Verification   with value above that of the mean; min does not mean “dista"}
{"chunk_id": "MonteCarloGeneration_26", "type": "reference", "path": "documentation/miscellaneous_trick_tools/MonteCarloGeneration.md", "heading": "5 Verification", "preview": "### 5 Verification    The construction arguments are: 1. variable name 2. seed f"}
{"chunk_id": "MonteCarloGeneration_27", "type": "reference", "path": "documentation/miscellaneous_trick_tools/MonteCarloGeneration.md", "heading": "5 Verification", "preview": "### 5 Verification   will configure the run for a monte-carlo analysis but witho"}
{"chunk_id": "MonteCarloGeneration_28", "type": "reference", "path": "documentation/miscellaneous_trick_tools/MonteCarloGeneration.md", "heading": "5 Verification", "preview": "### 5 Verification   C++ `<random>` library, from MonteCarloVariableRandom.     "}
{"chunk_id": "MonteCarloGeneration_29", "type": "reference", "path": "documentation/miscellaneous_trick_tools/MonteCarloGeneration.md", "heading": "5 Verification", "preview": "### 5 Verification   the array. After # the Monte Carlo Generation Model execute"}
{"chunk_id": "MonteCarloGeneration_30", "type": "reference", "path": "documentation/miscellaneous_trick_tools/MonteCarloGeneration.md", "heading": "5 Verification", "preview": "### 5 Verification   will create zero-padded `RUN` names suitable for the number"}
{"chunk_id": "Trickified-Project-Libraries_00", "type": "howto", "path": "documentation/building_a_simulation/Trickified-Project-Libraries.md", "heading": "A Real Life Trickified Project", "preview": "### A Real Life Trickified Project  | [Home](/trick) → [Documentation Home](../D"}
{"chunk_id": "Trickified-Project-Libraries_01", "type": "howto", "path": "documentation/building_a_simulation/Trickified-Project-Libraries.md", "heading": "A Real Life Trickified Project", "preview": "### A Real Life Trickified Project  file. I don't recommend setting it in your s"}
{"chunk_id": "Trickified-Project-Libraries_02", "type": "howto", "path": "documentation/building_a_simulation/Trickified-Project-Libraries.md", "heading": "A Real Life Trickified Project", "preview": "### A Real Life Trickified Project  ipped into `python`. The zip file name is co"}
{"chunk_id": "Trickified-Project-Libraries_03", "type": "howto", "path": "documentation/building_a_simulation/Trickified-Project-Libraries.md", "heading": "A Real Life Trickified Project", "preview": "### A Real Life Trickified Project  XX_FLAGS := -I$(HOME)/myproject/include  all"}
{"chunk_id": "Trickified-Project-Libraries_04", "type": "howto", "path": "documentation/building_a_simulation/Trickified-Project-Libraries.md", "heading": "A Real Life Trickified Project", "preview": "### A Real Life Trickified Project  _EXCLUDE` and `TRICK_EXCLUDE`, which cause I"}
{"chunk_id": "Trickified-Project-Libraries_05", "type": "howto", "path": "documentation/building_a_simulation/Trickified-Project-Libraries.md", "heading": "A Real Life Trickified Project", "preview": "### A Real Life Trickified Project  makefiles` directory, or maybe your project "}
{"chunk_id": "Trickified-Project-Libraries_06", "type": "howto", "path": "documentation/building_a_simulation/Trickified-Project-Libraries.md", "heading": "A Real Life Trickified Project", "preview": "### A Real Life Trickified Project   SWIG where to find *_py.i files     TRICK_S"}
{"chunk_id": "Building-a-Simulation_00", "type": "howto", "path": "documentation/building_a_simulation/Building-a-Simulation.md", "heading": "Root", "preview": "### Root  | [Home](/trick) → [Documentation Home](../Documentation-Home) → Build"}
{"chunk_id": "Building-a-Simulation_01", "type": "howto", "path": "documentation/building_a_simulation/Building-a-Simulation.md", "heading": "Root", "preview": "### Root   job dependencies for distributed process simulations. 1. With a compl"}
{"chunk_id": "Model-Source-Code_00", "type": "howto", "path": "documentation/building_a_simulation/Model-Source-Code.md", "heading": "Programming Language Support > Source Files > Trick Version Compatibility", "preview": "### Programming Language Support > Source Files > Trick Version Compatibility  |"}
{"chunk_id": "Model-Source-Code_01", "type": "howto", "path": "documentation/building_a_simulation/Model-Source-Code.md", "heading": "Programming Language Support > Source Files > Trick Version Compatibility", "preview": "### Programming Language Support > Source Files > Trick Version Compatibility   "}
{"chunk_id": "Model-Source-Code_02", "type": "howto", "path": "documentation/building_a_simulation/Model-Source-Code.md", "heading": "Programming Language Support > Source Files > Trick Version Compatibility", "preview": "### Programming Language Support > Source Files > Trick Version Compatibility   "}
{"chunk_id": "Model-Source-Code_03", "type": "howto", "path": "documentation/building_a_simulation/Model-Source-Code.md", "heading": "Programming Language Support > Source Files > Trick Version Compatibility", "preview": "### Programming Language Support > Source Files > Trick Version Compatibility   "}
{"chunk_id": "Model-Source-Code_04", "type": "howto", "path": "documentation/building_a_simulation/Model-Source-Code.md", "heading": "Programming Language Support > Source Files > Trick Version Compatibility", "preview": "### Programming Language Support > Source Files > Trick Version Compatibility  `"}
{"chunk_id": "Model-Source-Code_05", "type": "howto", "path": "documentation/building_a_simulation/Model-Source-Code.md", "heading": "Programming Language Support > Source Files > Trick Version Compatibility", "preview": "### Programming Language Support > Source Files > Trick Version Compatibility  ."}
{"chunk_id": "Model-Source-Code_06", "type": "howto", "path": "documentation/building_a_simulation/Model-Source-Code.md", "heading": "Programming Language Support > Source Files > Trick Version Compatibility", "preview": "### Programming Language Support > Source Files > Trick Version Compatibility   "}
{"chunk_id": "Model-Source-Code_07", "type": "howto", "path": "documentation/building_a_simulation/Model-Source-Code.md", "heading": "Programming Language Support > Source Files > Trick Version Compatibility", "preview": "### Programming Language Support > Source Files > Trick Version Compatibility   "}
{"chunk_id": "Model-Source-Code_08", "type": "howto", "path": "documentation/building_a_simulation/Model-Source-Code.md", "heading": "Programming Language Support > Source Files > Trick Version Compatibility", "preview": "### Programming Language Support > Source Files > Trick Version Compatibility   "}
{"chunk_id": "Model-Source-Code_09", "type": "howto", "path": "documentation/building_a_simulation/Model-Source-Code.md", "heading": "Programming Language Support > Source Files > Trick Version Compatibility", "preview": "### Programming Language Support > Source Files > Trick Version Compatibility  {"}
{"chunk_id": "Model-Source-Code_10", "type": "howto", "path": "documentation/building_a_simulation/Model-Source-Code.md", "heading": "Programming Language Support > Source Files > Trick Version Compatibility", "preview": "### Programming Language Support > Source Files > Trick Version Compatibility  e"}
{"chunk_id": "Model-Source-Code_11", "type": "howto", "path": "documentation/building_a_simulation/Model-Source-Code.md", "heading": "Programming Language Support > Source Files > Trick Version Compatibility", "preview": "### Programming Language Support > Source Files > Trick Version Compatibility   "}
{"chunk_id": "Model-Source-Code_12", "type": "howto", "path": "documentation/building_a_simulation/Model-Source-Code.md", "heading": "Programming Language Support > Source Files > Trick Version Compatibility", "preview": "### Programming Language Support > Source Files > Trick Version Compatibility  _"}
{"chunk_id": "Environment-Variables_00", "type": "howto", "path": "documentation/building_a_simulation/Environment-Variables.md", "heading": "Adding ${TRICK_HOME}/bin to PATH > TRICK_CFLAGS and TRICK_CXXFLAGS > MAKEFLAGS", "preview": "### Adding ${TRICK_HOME}/bin to PATH > TRICK_CFLAGS and TRICK_CXXFLAGS > MAKEFLA"}
{"chunk_id": "Environment-Variables_01", "type": "howto", "path": "documentation/building_a_simulation/Environment-Variables.md", "heading": "Adding ${TRICK_HOME}/bin to PATH > TRICK_CFLAGS and TRICK_CXXFLAGS > MAKEFLAGS", "preview": "### Adding ${TRICK_HOME}/bin to PATH > TRICK_CFLAGS and TRICK_CXXFLAGS > MAKEFLA"}
{"chunk_id": "Environment-Variables_02", "type": "howto", "path": "documentation/building_a_simulation/Environment-Variables.md", "heading": "Adding ${TRICK_HOME}/bin to PATH > TRICK_CFLAGS and TRICK_CXXFLAGS > MAKEFLAGS", "preview": "### Adding ${TRICK_HOME}/bin to PATH > TRICK_CFLAGS and TRICK_CXXFLAGS > MAKEFLA"}
{"chunk_id": "Environment-Variables_03", "type": "howto", "path": "documentation/building_a_simulation/Environment-Variables.md", "heading": "Adding ${TRICK_HOME}/bin to PATH > TRICK_CFLAGS and TRICK_CXXFLAGS > MAKEFLAGS", "preview": "### Adding ${TRICK_HOME}/bin to PATH > TRICK_CFLAGS and TRICK_CXXFLAGS > MAKEFLA"}
{"chunk_id": "Simulation-Definition-File_00", "type": "howto", "path": "documentation/building_a_simulation/Simulation-Definition-File.md", "heading": "Trick Header Comment > Create Connections", "preview": "### Trick Header Comment > Create Connections  | [Home](/trick) → [Documentation"}
{"chunk_id": "Simulation-Definition-File_01", "type": "howto", "path": "documentation/building_a_simulation/Simulation-Definition-File.md", "heading": "Trick Header Comment > Create Connections", "preview": "### Trick Header Comment > Create Connections   Comment  This optional section o"}
{"chunk_id": "Simulation-Definition-File_02", "type": "howto", "path": "documentation/building_a_simulation/Simulation-Definition-File.md", "heading": "Trick Header Comment > Create Connections", "preview": "### Trick Header Comment > Create Connections   header files.  They include the "}
{"chunk_id": "Simulation-Definition-File_03", "type": "howto", "path": "documentation/building_a_simulation/Simulation-Definition-File.md", "heading": "Trick Header Comment > Create Connections", "preview": "### Trick Header Comment > Create Connections  , etc. The child process specific"}
{"chunk_id": "Simulation-Definition-File_04", "type": "howto", "path": "documentation/building_a_simulation/Simulation-Definition-File.md", "heading": "Trick Header Comment > Create Connections", "preview": "### Trick Header Comment > Create Connections   same tag will be modified in the"}
{"chunk_id": "Simulation-Definition-File_05", "type": "howto", "path": "documentation/building_a_simulation/Simulation-Definition-File.md", "heading": "Trick Header Comment > Create Connections", "preview": "### Trick Header Comment > Create Connections   spec because they run only once."}
{"chunk_id": "Simulation-Definition-File_06", "type": "howto", "path": "documentation/building_a_simulation/Simulation-Definition-File.md", "heading": "Trick Header Comment > Create Connections", "preview": "### Trick Header Comment > Create Connections   Job Classes</b> <table> <tr bgco"}
{"chunk_id": "Simulation-Definition-File_07", "type": "howto", "path": "documentation/building_a_simulation/Simulation-Definition-File.md", "heading": "Trick Header Comment > Create Connections", "preview": "### Trick Header Comment > Create Connections   reschedules its own next call ti"}
{"chunk_id": "Simulation-Definition-File_08", "type": "howto", "path": "documentation/building_a_simulation/Simulation-Definition-File.md", "heading": "Trick Header Comment > Create Connections", "preview": "### Trick Header Comment > Create Connections  =\"#e6ceff\">freeze_init</td><td>Mo"}
{"chunk_id": "Simulation-Definition-File_09", "type": "howto", "path": "documentation/building_a_simulation/Simulation-Definition-File.md", "heading": "Trick Header Comment > Create Connections", "preview": "### Trick Header Comment > Create Connections   the simulation. If the job does "}
{"chunk_id": "Simulation-Definition-File_10", "type": "howto", "path": "documentation/building_a_simulation/Simulation-Definition-File.md", "heading": "Trick Header Comment > Create Connections", "preview": "### Trick Header Comment > Create Connections  ++ models contained within the si"}
{"chunk_id": "Simulation-Definition-File_11", "type": "howto", "path": "documentation/building_a_simulation/Simulation-Definition-File.md", "heading": "Trick Header Comment > Create Connections", "preview": "### Trick Header Comment > Create Connections    Sim objects may define multiple"}
{"chunk_id": "Simulation-Definition-File_12", "type": "howto", "path": "documentation/building_a_simulation/Simulation-Definition-File.md", "heading": "Trick Header Comment > Create Connections", "preview": "### Trick Header Comment > Create Connections   ;         } } ;  ballSimObject b"}
{"chunk_id": "Simulation-Definition-File_13", "type": "howto", "path": "documentation/building_a_simulation/Simulation-Definition-File.md", "heading": "Trick Header Comment > Create Connections", "preview": "### Trick Header Comment > Create Connections   list The collection mechanism sy"}
{"chunk_id": "Simulation-Definition-File_14", "type": "howto", "path": "documentation/building_a_simulation/Simulation-Definition-File.md", "heading": "Trick Header Comment > Create Connections", "preview": "### Trick Header Comment > Create Connections   {             shuttle.aero.out.t"}
{"chunk_id": "Simulation-Definition-File_15", "type": "howto", "path": "documentation/building_a_simulation/Simulation-Definition-File.md", "heading": "Trick Header Comment > Create Connections", "preview": "### Trick Header Comment > Create Connections   0.0 ;      /* typecast the void "}
{"chunk_id": "Simulation-Definition-File_16", "type": "howto", "path": "documentation/building_a_simulation/Simulation-Definition-File.md", "heading": "Trick Header Comment > Create Connections", "preview": "### Trick Header Comment > Create Connections   appear in the S_define file.  ``"}
{"chunk_id": "Making-the-Simulation_00", "type": "howto", "path": "documentation/building_a_simulation/Making-the-Simulation.md", "heading": "Simulation Compilation Environment Variables > Cleaning Up", "preview": "### Simulation Compilation Environment Variables > Cleaning Up  | [Home](/trick)"}
{"chunk_id": "Making-the-Simulation_01", "type": "howto", "path": "documentation/building_a_simulation/Making-the-Simulation.md", "heading": "Simulation Compilation Environment Variables > Cleaning Up", "preview": "### Simulation Compilation Environment Variables > Cleaning Up   header files. F"}
{"chunk_id": "Making-the-Simulation_02", "type": "howto", "path": "documentation/building_a_simulation/Making-the-Simulation.md", "heading": "Simulation Compilation Environment Variables > Cleaning Up", "preview": "### Simulation Compilation Environment Variables > Cleaning Up   to compile.  ##"}
{"chunk_id": "Install-Guide_00", "type": "howto", "path": "documentation/install_guide/Install-Guide.md", "heading": "Install Trick > Notes > Python Version", "preview": "### Install Trick > Notes > Python Version  | [Home](/trick/index) → Install Gui"}
{"chunk_id": "Install-Guide_01", "type": "howto", "path": "documentation/install_guide/Install-Guide.md", "heading": "Install Trick > Notes > Python Version", "preview": "### Install Trick > Notes > Python Version                                      "}
{"chunk_id": "Install-Guide_02", "type": "howto", "path": "documentation/install_guide/Install-Guide.md", "heading": "Install Trick > Notes > Python Version", "preview": "### Install Trick > Notes > Python Version  fedora)| |[Ubuntu](#ubuntu)| |[macOS"}
{"chunk_id": "Install-Guide_03", "type": "howto", "path": "documentation/install_guide/Install-Guide.md", "heading": "Install Trick > Notes > Python Version", "preview": "### Install Trick > Notes > Python Version  8\"></a>  ### RedHat Enterprise Linux"}
{"chunk_id": "Install-Guide_04", "type": "howto", "path": "documentation/install_guide/Install-Guide.md", "heading": "Install Trick > Notes > Python Version", "preview": "### Install Trick > Notes > Python Version   and install the 'epel-release' pack"}
{"chunk_id": "Install-Guide_05", "type": "howto", "path": "documentation/install_guide/Install-Guide.md", "heading": "Install Trick > Notes > Python Version", "preview": "### Install Trick > Notes > Python Version   libx11-dev libxml2-dev libxt-dev li"}
{"chunk_id": "Install-Guide_06", "type": "howto", "path": "documentation/install_guide/Install-Guide.md", "heading": "Install Trick > Notes > Python Version", "preview": "### Install Trick > Notes > Python Version   your terminal to install brew at th"}
{"chunk_id": "Install-Guide_07", "type": "howto", "path": "documentation/install_guide/Install-Guide.md", "heading": "Install Trick > Notes > Python Version", "preview": "### Install Trick > Notes > Python Version   & Privacy->Privacy->Developer Tools"}
{"chunk_id": "Install-Guide_08", "type": "howto", "path": "documentation/install_guide/Install-Guide.md", "heading": "Install Trick > Notes > Python Version", "preview": "### Install Trick > Notes > Python Version   b. Option 2: Get XQuartz from www.q"}
{"chunk_id": "Install-Guide_09", "type": "howto", "path": "documentation/install_guide/Install-Guide.md", "heading": "Install Trick > Notes > Python Version", "preview": "### Install Trick > Notes > Python Version   environment, you need to manually b"}
{"chunk_id": "Install-Guide_10", "type": "howto", "path": "documentation/install_guide/Install-Guide.md", "heading": "Install Trick > Notes > Python Version", "preview": "### Install Trick > Notes > Python Version  \" -DCMAKE_BUILD_TYPE=Release -DLLVM_"}
{"chunk_id": "Install-Guide_11", "type": "howto", "path": "documentation/install_guide/Install-Guide.md", "heading": "Install Trick > Notes > Python Version", "preview": "### Install Trick > Notes > Python Version   and execution. If they are not set,"}
{"chunk_id": "Install-Guide_12", "type": "howto", "path": "documentation/install_guide/Install-Guide.md", "heading": "Install Trick > Notes > Python Version", "preview": "### Install Trick > Notes > Python Version   everything they need to run. You wi"}
{"chunk_id": "Introduction_00", "type": "concept", "path": "documentation/introduction/Introduction.md", "heading": "Root", "preview": "### Root  | [Home](/trick) → [Documentation Home](../Documentation-Home) → Intro"}
{"chunk_id": "Tutorial_00", "type": "howto", "path": "tutorial/Tutorial.md", "heading": "Table of Contents", "preview": "### Table of Contents  | [Home](/trick) → Tutorial Home | |---------------------"}
{"chunk_id": "ATutMonteCarlo_00", "type": "howto", "path": "tutorial/ATutMonteCarlo.md", "heading": "Monte Carlo > Optimization > Modifications to S_Define", "preview": "### Monte Carlo > Optimization > Modifications to S_Define  | [Home](/trick) → ["}
{"chunk_id": "ATutMonteCarlo_01", "type": "howto", "path": "tutorial/ATutMonteCarlo.md", "heading": "Monte Carlo > Optimization > Modifications to S_Define", "preview": "### Monte Carlo > Optimization > Modifications to S_Define  -value-list></a> **L"}
{"chunk_id": "ATutMonteCarlo_02", "type": "howto", "path": "tutorial/ATutMonteCarlo.md", "heading": "Monte Carlo > Optimization > Modifications to S_Define", "preview": "### Monte Carlo > Optimization > Modifications to S_Define   and select **Add ru"}
{"chunk_id": "ATutMonteCarlo_03", "type": "howto", "path": "tutorial/ATutMonteCarlo.md", "heading": "Monte Carlo > Optimization > Modifications to S_Define", "preview": "### Monte Carlo > Optimization > Modifications to S_Define   plot the curves the"}
{"chunk_id": "ATutMonteCarlo_04", "type": "howto", "path": "tutorial/ATutMonteCarlo.md", "heading": "Monte Carlo > Optimization > Modifications to S_Define", "preview": "### Monte Carlo > Optimization > Modifications to S_Define   increment *= -1;   "}
{"chunk_id": "ATutMonteCarlo_05", "type": "howto", "path": "tutorial/ATutMonteCarlo.md", "heading": "Monte Carlo > Optimization > Modifications to S_Define", "preview": "### Monte Carlo > Optimization > Modifications to S_Define  cannon ) ;          "}
{"chunk_id": "TutVariableServer_00", "type": "howto", "path": "tutorial/TutVariableServer.md", "heading": "Trick Variable Server > Appendix > The Variable Server API", "preview": "### Trick Variable Server > Appendix > The Variable Server API  | [Home](/trick)"}
{"chunk_id": "TutVariableServer_01", "type": "howto", "path": "tutorial/TutVariableServer.md", "heading": "Trick Variable Server > Appendix > The Variable Server API", "preview": "### Trick Variable Server > Appendix > The Variable Server API   are to be sent "}
{"chunk_id": "TutVariableServer_02", "type": "howto", "path": "tutorial/TutVariableServer.md", "heading": "Trick Variable Server > Appendix > The Variable Server API", "preview": "### Trick Variable Server > Appendix > The Variable Server API  trick.var_unpaus"}
{"chunk_id": "TutVariableServer_03", "type": "howto", "path": "tutorial/TutVariableServer.md", "heading": "Trick Variable Server > Appendix > The Variable Server API", "preview": "### Trick Variable Server > Appendix > The Variable Server API   **trick.var_add"}
{"chunk_id": "TutVariableServer_04", "type": "howto", "path": "tutorial/TutVariableServer.md", "heading": "Trick Variable Server > Appendix > The Variable Server API", "preview": "### Trick Variable Server > Appendix > The Variable Server API   position data, "}
{"chunk_id": "TutVariableServer_05", "type": "howto", "path": "tutorial/TutVariableServer.md", "heading": "Trick Variable Server > Appendix > The Variable Server API", "preview": "### Trick Variable Server > Appendix > The Variable Server API  0\t0  0\t0\t0 ```  "}
{"chunk_id": "TutVariableServer_06", "type": "howto", "path": "tutorial/TutVariableServer.md", "heading": "Trick Variable Server > Appendix > The Variable Server API", "preview": "### Trick Variable Server > Appendix > The Variable Server API   like ```trick.v"}
{"chunk_id": "TutVariableServer_07", "type": "howto", "path": "tutorial/TutVariableServer.md", "heading": "Trick Variable Server > Appendix > The Variable Server API", "preview": "### Trick Variable Server > Appendix > The Variable Server API  (side=LEFT)  # 5"}
{"chunk_id": "TutVariableServer_08", "type": "howto", "path": "tutorial/TutVariableServer.md", "heading": "Trick Variable Server > Appendix > The Variable Server API", "preview": "### Trick Variable Server > Appendix > The Variable Server API  \\\") \\n\" ) client"}
{"chunk_id": "TutVariableServer_09", "type": "howto", "path": "tutorial/TutVariableServer.md", "heading": "Trick Variable Server > Appendix > The Variable Server API", "preview": "### Trick Variable Server > Appendix > The Variable Server API  ') + b\" \\n\")    "}
{"chunk_id": "TutVariableServer_10", "type": "howto", "path": "tutorial/TutVariableServer.md", "heading": "Trick Variable Server > Appendix > The Variable Server API", "preview": "### Trick Variable Server > Appendix > The Variable Server API  -file></a> ## St"}
{"chunk_id": "TutVariableServer_11", "type": "howto", "path": "tutorial/TutVariableServer.md", "heading": "Trick Variable Server > Appendix > The Variable Server API", "preview": "### Trick Variable Server > Appendix > The Variable Server API  value\\>...**\\t**"}
{"chunk_id": "ATutDynamicEvents_00", "type": "howto", "path": "tutorial/ATutDynamicEvents.md", "heading": "Dynamic Events - Making Contact > Updating Our Cannonball Simulation > Step 6 - Run the Simulation", "preview": "### Dynamic Events - Making Contact > Updating Our Cannonball Simulation > Step "}
{"chunk_id": "ATutDynamicEvents_01", "type": "howto", "path": "tutorial/ATutDynamicEvents.md", "heading": "Dynamic Events - Making Contact > Updating Our Cannonball Simulation > Step 6 - Run the Simulation", "preview": "### Dynamic Events - Making Contact > Updating Our Cannonball Simulation > Step "}
{"chunk_id": "ATutDynamicEvents_02", "type": "howto", "path": "tutorial/ATutDynamicEvents.md", "heading": "Dynamic Events - Making Contact > Updating Our Cannonball Simulation > Step 6 - Run the Simulation", "preview": "### Dynamic Events - Making Contact > Updating Our Cannonball Simulation > Step "}
{"chunk_id": "ATutDynamicEvents_03", "type": "howto", "path": "tutorial/ATutDynamicEvents.md", "heading": "Dynamic Events - Making Contact > Updating Our Cannonball Simulation > Step 6 - Run the Simulation", "preview": "### Dynamic Events - Making Contact > Updating Our Cannonball Simulation > Step "}
{"chunk_id": "ATutDynamicEvents_04", "type": "howto", "path": "tutorial/ATutDynamicEvents.md", "heading": "Dynamic Events - Making Contact > Updating Our Cannonball Simulation > Step 6 - Run the Simulation", "preview": "### Dynamic Events - Making Contact > Updating Our Cannonball Simulation > Step "}
{"chunk_id": "ATutNumericSim_00", "type": "howto", "path": "tutorial/ATutNumericSim.md", "heading": "State Propagation with Numerical Integration > Numeric Versus Analytical", "preview": "### State Propagation with Numerical Integration > Numeric Versus Analytical  | "}
{"chunk_id": "ATutNumericSim_01", "type": "howto", "path": "tutorial/ATutNumericSim.md", "heading": "State Propagation with Numerical Integration > Numeric Versus Analytical", "preview": "### State Propagation with Numerical Integration > Numeric Versus Analytical   a"}
{"chunk_id": "ATutNumericSim_02", "type": "howto", "path": "tutorial/ATutNumericSim.md", "heading": "State Propagation with Numerical Integration > Numeric Versus Analytical", "preview": "### State Propagation with Numerical Integration > Numeric Versus Analytical  Fi"}
{"chunk_id": "ATutNumericSim_03", "type": "howto", "path": "tutorial/ATutNumericSim.md", "heading": "State Propagation with Numerical Integration > Numeric Versus Analytical", "preview": "### State Propagation with Numerical Integration > Numeric Versus Analytical   w"}
{"chunk_id": "ATutNumericSim_04", "type": "howto", "path": "tutorial/ATutNumericSim.md", "heading": "State Propagation with Numerical Integration > Numeric Versus Analytical", "preview": "### State Propagation with Numerical Integration > Numeric Versus Analytical  #d"}
{"chunk_id": "ATutNumericSim_05", "type": "howto", "path": "tutorial/ATutNumericSim.md", "heading": "State Propagation with Numerical Integration > Numeric Versus Analytical", "preview": "### State Propagation with Numerical Integration > Numeric Versus Analytical   t"}
{"chunk_id": "ATutNumericSim_06", "type": "howto", "path": "tutorial/ATutNumericSim.md", "heading": "State Propagation with Numerical Integration > Numeric Versus Analytical", "preview": "### State Propagation with Numerical Integration > Numeric Versus Analytical  in"}
{"chunk_id": "ATutNumericSim_07", "type": "howto", "path": "tutorial/ATutNumericSim.md", "heading": "State Propagation with Numerical Integration > Numeric Versus Analytical", "preview": "### State Propagation with Numerical Integration > Numeric Versus Analytical  \" "}
{"chunk_id": "ATutTrickView_00", "type": "howto", "path": "tutorial/ATutTrickView.md", "heading": "Viewing Real-Time Data with Trick View (TV) > TV Without An Input File > TV With An Input File", "preview": "### Viewing Real-Time Data with Trick View (TV) > TV Without An Input File > TV "}
{"chunk_id": "ATutTrickView_01", "type": "howto", "path": "tutorial/ATutTrickView.md", "heading": "Viewing Real-Time Data with Trick View (TV) > TV Without An Input File > TV With An Input File", "preview": "### Viewing Real-Time Data with Trick View (TV) > TV Without An Input File > TV "}
{"chunk_id": "ATutTrickView_02", "type": "howto", "path": "tutorial/ATutTrickView.md", "heading": "Viewing Real-Time Data with Trick View (TV) > TV Without An Input File > TV With An Input File", "preview": "### Viewing Real-Time Data with Trick View (TV) > TV Without An Input File > TV "}
{"chunk_id": "ATutRunningRealtime_00", "type": "howto", "path": "tutorial/ATutRunningRealtime.md", "heading": "Running Real-Time > Making A Real-time Input File > Using The Sim Control Panel", "preview": "### Running Real-Time > Making A Real-time Input File > Using The Sim Control Pa"}
{"chunk_id": "ATutRunningRealtime_01", "type": "howto", "path": "tutorial/ATutRunningRealtime.md", "heading": "Running Real-Time > Making A Real-time Input File > Using The Sim Control Panel", "preview": "### Running Real-Time > Making A Real-time Input File > Using The Sim Control Pa"}
{"chunk_id": "ATutPlottingData_00", "type": "howto", "path": "tutorial/ATutPlottingData.md", "heading": "Viewing Recorded Data > Using Trick Quick Plot > Plotting Time -vs- Position", "preview": "### Viewing Recorded Data > Using Trick Quick Plot > Plotting Time -vs- Position"}
{"chunk_id": "ATutPlottingData_01", "type": "howto", "path": "tutorial/ATutPlottingData.md", "heading": "Viewing Recorded Data > Using Trick Quick Plot > Plotting Time -vs- Position", "preview": "### Viewing Recorded Data > Using Trick Quick Plot > Plotting Time -vs- Position"}
{"chunk_id": "ATutPlottingData_02", "type": "howto", "path": "tutorial/ATutPlottingData.md", "heading": "Viewing Recorded Data > Using Trick Quick Plot > Plotting Time -vs- Position", "preview": "### Viewing Recorded Data > Using Trick Quick Plot > Plotting Time -vs- Position"}
{"chunk_id": "ATutRecordingData_00", "type": "howto", "path": "tutorial/ATutRecordingData.md", "heading": "Recording Simulation Data > Creating A Data Recording File Using DRE > Running The Simulation And Recording Data", "preview": "### Recording Simulation Data > Creating A Data Recording File Using DRE > Runni"}
{"chunk_id": "ATutAnalyticSim_00", "type": "howto", "path": "tutorial/ATutAnalyticSim.md", "heading": "Building & Running a Trick-based Simulation > Running The Simulation > Sim Execution", "preview": "### Building & Running a Trick-based Simulation > Running The Simulation > Sim E"}
{"chunk_id": "ATutAnalyticSim_01", "type": "howto", "path": "tutorial/ATutAnalyticSim.md", "heading": "Building & Running a Trick-based Simulation > Running The Simulation > Sim Execution", "preview": "### Building & Running a Trick-based Simulation > Running The Simulation > Sim E"}
{"chunk_id": "ATutAnalyticSim_02", "type": "howto", "path": "tutorial/ATutAnalyticSim.md", "heading": "Building & Running a Trick-based Simulation > Running The Simulation > Sim Execution", "preview": "### Building & Running a Trick-based Simulation > Running The Simulation > Sim E"}
{"chunk_id": "ATutAnalyticSim_03", "type": "howto", "path": "tutorial/ATutAnalyticSim.md", "heading": "Building & Running a Trick-based Simulation > Running The Simulation > Sim Execution", "preview": "### Building & Running a Trick-based Simulation > Running The Simulation > Sim E"}
{"chunk_id": "ATutAnalyticSim_04", "type": "howto", "path": "tutorial/ATutAnalyticSim.md", "heading": "Building & Running a Trick-based Simulation > Running The Simulation > Sim Execution", "preview": "### Building & Running a Trick-based Simulation > Running The Simulation > Sim E"}
{"chunk_id": "ATutAnalyticSim_05", "type": "howto", "path": "tutorial/ATutAnalyticSim.md", "heading": "Building & Running a Trick-based Simulation > Running The Simulation > Sim Execution", "preview": "### Building & Running a Trick-based Simulation > Running The Simulation > Sim E"}
{"chunk_id": "ATutAnalyticSim_06", "type": "howto", "path": "tutorial/ATutAnalyticSim.md", "heading": "Building & Running a Trick-based Simulation > Running The Simulation > Sim Execution", "preview": "### Building & Running a Trick-based Simulation > Running The Simulation > Sim E"}
{"chunk_id": "ATutAnalyticSim_07", "type": "howto", "path": "tutorial/ATutAnalyticSim.md", "heading": "Building & Running a Trick-based Simulation > Running The Simulation > Sim Execution", "preview": "### Building & Running a Trick-based Simulation > Running The Simulation > Sim E"}
{"chunk_id": "ATutAnalyticSim_08", "type": "howto", "path": "tutorial/ATutAnalyticSim.md", "heading": "Building & Running a Trick-based Simulation > Running The Simulation > Sim Execution", "preview": "### Building & Running a Trick-based Simulation > Running The Simulation > Sim E"}
{"chunk_id": "ATutAnalyticSim_09", "type": "howto", "path": "tutorial/ATutAnalyticSim.md", "heading": "Building & Running a Trick-based Simulation > Running The Simulation > Sim Execution", "preview": "### Building & Running a Trick-based Simulation > Running The Simulation > Sim E"}
{"chunk_id": "ATutAnalyticSim_10", "type": "howto", "path": "tutorial/ATutAnalyticSim.md", "heading": "Building & Running a Trick-based Simulation > Running The Simulation > Sim Execution", "preview": "### Building & Running a Trick-based Simulation > Running The Simulation > Sim E"}
{"chunk_id": "ATutAnalyticSim_11", "type": "howto", "path": "tutorial/ATutAnalyticSim.md", "heading": "Building & Running a Trick-based Simulation > Running The Simulation > Sim Execution", "preview": "### Building & Running a Trick-based Simulation > Running The Simulation > Sim E"}
{"chunk_id": "ATutAnalyticSim_12", "type": "howto", "path": "tutorial/ATutAnalyticSim.md", "heading": "Building & Running a Trick-based Simulation > Running The Simulation > Sim Execution", "preview": "### Building & Running a Trick-based Simulation > Running The Simulation > Sim E"}
{"chunk_id": "ATutAnalyticSim_13", "type": "howto", "path": "tutorial/ATutAnalyticSim.md", "heading": "Building & Running a Trick-based Simulation > Running The Simulation > Sim Execution", "preview": "### Building & Running a Trick-based Simulation > Running The Simulation > Sim E"}
{"chunk_id": "ATutAnalyticSim_14", "type": "howto", "path": "tutorial/ATutAnalyticSim.md", "heading": "Building & Running a Trick-based Simulation > Running The Simulation > Sim Execution", "preview": "### Building & Running a Trick-based Simulation > Running The Simulation > Sim E"}
{"chunk_id": "ATutUnitTables_00", "type": "howto", "path": "tutorial/ATutUnitTables.md", "heading": "Common Units & Unit Prefixes > Unit Prefixes > Counting", "preview": "### Common Units & Unit Prefixes > Unit Prefixes > Counting  ## Common Units & U"}
{"chunk_id": "ATutUnitTables_01", "type": "howto", "path": "tutorial/ATutUnitTables.md", "heading": "Common Units & Unit Prefixes > Unit Prefixes > Counting", "preview": "### Common Units & Unit Prefixes > Unit Prefixes > Counting  | n, nano          "}
{"chunk_id": "ATutUnitTables_02", "type": "howto", "path": "tutorial/ATutUnitTables.md", "heading": "Common Units & Unit Prefixes > Unit Prefixes > Counting", "preview": "### Common Units & Unit Prefixes > Unit Prefixes > Counting  ivolt[s]           "}
{"chunk_id": "ATutArchitecture_00", "type": "howto", "path": "tutorial/ATutArchitecture.md", "heading": "Architecture of a Trick Simulation > The Simulation Definition File (S_define) > The Parts of an S_define", "preview": "### Architecture of a Trick Simulation > The Simulation Definition File (S_defin"}
{"chunk_id": "ATutArchitecture_01", "type": "howto", "path": "tutorial/ATutArchitecture.md", "heading": "Architecture of a Trick Simulation > The Simulation Definition File (S_define) > The Parts of an S_define", "preview": "### Architecture of a Trick Simulation > The Simulation Definition File (S_defin"}
{"chunk_id": "ATutASimpleSim_00", "type": "howto", "path": "tutorial/ATutASimpleSim.md", "heading": "A Simple (non-Trick) Simulation > Cannonball Problem Statement > Limitations of the Simulation", "preview": "### A Simple (non-Trick) Simulation > Cannonball Problem Statement > Limitations"}
{"chunk_id": "ATutASimpleSim_01", "type": "howto", "path": "tutorial/ATutASimpleSim.md", "heading": "A Simple (non-Trick) Simulation > Cannonball Problem Statement > Limitations of the Simulation", "preview": "### A Simple (non-Trick) Simulation > Cannonball Problem Statement > Limitations"}
{"chunk_id": "ATutASimpleSim_02", "type": "howto", "path": "tutorial/ATutASimpleSim.md", "heading": "A Simple (non-Trick) Simulation > Cannonball Problem Statement > Limitations of the Simulation", "preview": "### A Simple (non-Trick) Simulation > Cannonball Problem Statement > Limitations"}
{"chunk_id": "ATutASimpleSim_03", "type": "howto", "path": "tutorial/ATutASimpleSim.md", "heading": "A Simple (non-Trick) Simulation > Cannonball Problem Statement > Limitations of the Simulation", "preview": "### A Simple (non-Trick) Simulation > Cannonball Problem Statement > Limitations"}
{"chunk_id": "ATutIntroduction_00", "type": "howto", "path": "tutorial/ATutIntroduction.md", "heading": "🏁 Introduction > Installing Trick", "preview": "### 🏁 Introduction > Installing Trick  | [Home](/trick) → [Tutorial Home](Tutori"}
{"chunk_id": "ATutIntroduction_01", "type": "howto", "path": "tutorial/ATutIntroduction.md", "heading": "🏁 Introduction > Installing Trick", "preview": "### 🏁 Introduction > Installing Trick   Trick architecture and its capabilities."}
