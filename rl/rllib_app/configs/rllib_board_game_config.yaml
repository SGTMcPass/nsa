# configs/rllib_board_game_config.yaml

project_name: "BoardGame_RLlib_Full"

# The 'environment' section is now identical to the corrected SB3 config.
environment:
  factory_class: "rl_project.environments.board_game_factory.BoardGameFactory"
  params:
    goal_points: 100000
    
    initial_resources:
      initial_turns: 50
      points: 0
      gems: 0
      gold: 0
      chroma: 0
      obsidian: 0
      otta: 0
      gem_purchases_done: 0
      free_turns: 0

    observed_resources:
      - "points"
      - "gems"
      - "gold"
      - "chroma"
      - "obsidian"
      - "otta"
      - "gem_purchases_done"

    reward_weights:
      points: 1.0
      free_turns: 0.0
      gems: 0.0
      gold: 0.0
      chroma: 0.0
      obsidian: 0.0
      otta: 0.0
      gem_purchases_done: 0.0

    # These settings are now parameterized as per our refactoring
    gem_purchase_settings:
      cost: 750
      reward_turns: 5
      limit: 7
      
    points_breakpoints: [2000, 5000, 8000, 12000, 16000, 20000, 22000, 25000, 28000, 32000, 36000, 40000, 42000, 45000, 48000, 52000, 56000, 60000, 62000, 65000, 68000, 72000, 76000, 80000, 82000, 85000, 88000, 92000, 96000, 100000]
    turn_task_breakpoints: [5, 10, 20, 30, 40, 60, 80, 100, 150, 200, 250, 300, 350, 400, 450, 500, 600]
    turn_task_reward: [1, 2, 2, 2, 2, 3, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5]

    # The board layout now contains the data-driven FateWheelTile
    board_layout:
      - { type: "FlatTile", params: { points: 400 } }
      - { type: "FlatTile", params: { gems: 50 } }
      - { type: "FlatTile", params: { points: 50 } }
      - { type: "FlatTile", params: { points: 400 } }
      - { type: "FlatTile", params: { points: 800 } }
      - { type: "FlatTile", params: { points: 50 } }
      - { type: "FlatTile", params: { turns: 2 } }
      - { type: "FlatTile", params: { gems: 50 } }
      - { type: "GrandPrizeTile" }
      - { type: "FlatTile", params: { gold: 1000 } }
      - { type: "PointWheelTile" }
      - { type: "FlatTile", params: { points: 50 } }
      - { type: "FlatTile", params: { points: 200 } }
      - { type: "FlatTile", params: { gold: 1000 } }
      - { type: "FlatTile", params: { turns: 2 } }
      - { type: "FlatTile", params: { points: 200 } }
      - { type: "FlatTile", params: { points: 800 } }
      - { type: "FlatTile", params: { gold: 1000 } }
      - { type: "FlatTile", params: { points: 50 } }
      - { type: "FlatTile", params: { points: 200 } }
      - { type: "PointWheelTile" }
      - { type: "FlatTile", params: { gold: 1000 } }
      - type: "FateWheelTile"
        params:
          outcomes:
            - reward: { points: 500 }
              chance: 2500
            - reward: { otta: 2 }
              chance: 300
            - reward: { chroma: 1 }
              chance: 700
            - reward: { free_turns: 1 }
              chance: 1500
            - reward: { gold: 2000 }
              chance: 5000
      - { type: "FlatTile", params: { points: 200 } }

# The 'runner' section is specific to RLlib.
runner:
  backend: "rllib"
  policy: "" # Policy is specified inside RLlib's config, not here.
  total_timesteps: 1000000
  hyperparams:
    algorithm: "PPO"
    
    # Set the number of parallel workers for data collection
    num_rollout_workers: 8 

    # Note the parameter names differ from SB3's.
    params:
      render_env: false
      # These values are now mapped from our SB3 config
      lr: 0.0003
      gamma: 0.99
      #lambda: 0.95        # RLlib uses 'lambda' for SB3's 'gae_lambda'
      entropy_coeff: 0.01 # RLlib uses 'entropy_coeff' for SB3's 'ent_coef'
      vf_loss_coeff: 0.5  # RLlib uses 'vf_loss_coeff' for SB3's 'vf_coef'
      num_sgd_iter: 10      # RLlib uses 'num_sgd_iter' for SB3's 'n_epochs'
      sgd_minibatch_size: 64 # RLlib uses 'sgd_minibatch_size' for SB3's 'batch_size'
      
      # RLlib-specific parameters that are analogous to SB3's n_steps
      rollout_fragment_length: 2048
      train_batch_size: 16384 # Typically rollout_fragment_length * num_rollout_workers
